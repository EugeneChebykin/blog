{"version":3,"sources":["api/index.js","history/index.js","store/actions/index.js","components/Navbar.jsx","pages/Home.jsx","components/LoginForm.jsx","pages/Login.jsx","components/SignUpForm.jsx","pages/SignUp.jsx","routes/index.jsx","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["token","localStorage","getItem","AuthorizationHeader","Autorization","api","axios","create","baseURL","headers","login","user","a","async","body","JSON","stringify","post","response","setItem","data","registration","createBrowserHistory","loginRequest","createAction","loginSuccess","loginFailure","logout","registrRequest","registrSuccess","registrFailure","withRouter","props","loggedIn","useSelector","state","userReducer","dispatch","useDispatch","location","theme","mode","defaultSelectedKeys","pathname","selectedKeys","style","lineHeight","display","Item","key","to","marginLeft","onClick","actions","Home","parse","username","validationSchema","Yup","shape","email","required","password","LoginForm","errorsApi","errorsReducer","errors","initialValues","onSubmit","values","setSubmitting","resetForm","API","history","push","touched","isSubmitting","handleChange","handleBlur","handleSubmit","marginTop","width","validateStatus","help","type","id","prefix","placeholder","value","onChange","onBlur","htmlType","disabled","message","Login","justifyContent","alignItems","min","max","matches","SignUpForm","SignUp","Header","Layout","Content","ConditionalRoute","Comp","component","pathToRedirect","conditionFunc","rest","render","Routes","className","exact","path","userData","initialState","handleActions","payload","removeItem","combineReducers","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","store","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.def8108a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst { token } = localStorage.getItem('user') || {};\r\nconst AuthorizationHeader = token ? { Autorization: `Bearer ${token}` } : {};\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://conduit.productionready.io/api/',\r\n  headers: { ...AuthorizationHeader, 'Content-type': 'application/json' },\r\n});\r\n\r\nexport const login = async user => {\r\n  const body = JSON.stringify({ user });\r\n  const response = await api.post('/users/login', body);\r\n  localStorage.setItem('user', JSON.stringify(response.data.user));\r\n  return response.data.user;\r\n};\r\nexport const registration = async user => {\r\n  const body = JSON.stringify({ user });\r\n  const response = await api.post('/users', body);\r\n  return response.data.user;\r\n};\r\n\r\nexport const logout = () => localStorage.removeItem('user');\r\n\r\nexport default api;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import { createAction } from 'redux-actions';\r\nimport * as API from '../../api';\r\nimport history from '../../history';\r\n\r\nexport const loginRequest = createAction('USER_LOGIN_REQUEST');\r\nexport const loginSuccess = createAction('USER_LOGIN_SUCCESS');\r\nexport const loginFailure = createAction('USER_LOGIN_FAILURE');\r\n\r\nexport const logout = createAction('USER_LOGOUT');\r\n\r\nexport const registrRequest = createAction('USER_REGISTR_REQUEST');\r\nexport const registrSuccess = createAction('USER_REGISTR_SUCCESS');\r\nexport const registrFailure = createAction('USER_REGISTR_FAILURE');\r\n\r\nexport const loginAction = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await API.login(user);\r\n    dispatch(loginSuccess({ user: response }));\r\n    history.push('/home');\r\n  } catch (err) {\r\n    dispatch(loginFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const registrAction = user => async dispatch => {\r\n  dispatch(registrRequest());\r\n  try {\r\n    const response = await API.registration(user);\r\n    dispatch(registrSuccess({ user: response }));\r\n    history.push('/login');\r\n  } catch (err) {\r\n    dispatch(registrFailure(err.response.data));\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Navbar = props => {\r\n  const { loggedIn } = useSelector(state => state.userReducer);\r\n  const dispatch = useDispatch();\r\n  const { location } = props;\r\n\r\n  const handleLogoutClick = () => dispatch(actions.logout());\r\n\r\n  return (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode=\"horizontal\"\r\n      defaultSelectedKeys={[location.pathname]}\r\n      selectedKeys={[location.pathname]}\r\n      style={{ lineHeight: '64px', display: 'flex' }}\r\n    >\r\n      <Menu.Item key=\"/home\">\r\n        <NavLink to=\"/home\">Home</NavLink>\r\n      </Menu.Item>\r\n      {!loggedIn && (\r\n        <Menu.Item key=\"/login\" style={{ marginLeft: 'auto' }}>\r\n          <NavLink to=\"/login\">Login</NavLink>\r\n        </Menu.Item>\r\n      )}\r\n      {loggedIn && (\r\n        <Menu.Item style={{ marginLeft: 'auto' }} onClick={handleLogoutClick}>\r\n          Log out\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  location: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  return <h1>{user && `Hello ${user.username}`}</h1>;\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginAction } from '../store/actions';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Must be a valid email address')\r\n    .required('Email is required'),\r\n  password: Yup.string().required('Password is required'),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const { errors: errorsApi } = useSelector(state => state.errorsReducer);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n        dispatch(loginAction(values));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit} style={{ marginTop: '70px', width: '300px' }}>\r\n          <Form.Item\r\n            validateStatus={touched.email && errors.email ? 'error' : null}\r\n            help={touched.email && errors.email ? errors.email : null}\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter an email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.password && errors.password ? 'error' : null}\r\n            help={touched.password && errors.password ? errors.password : null}\r\n          >\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to=\"/signup\">register now!</Link>\r\n          </Form.Item>\r\n          {errorsApi && <Alert type=\"error\" message={JSON.stringify(errorsApi, null, 2)} />}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrAction } from '../store/actions';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(1, 'Must have a character')\r\n    .max(50, 'Must be shorter than 50')\r\n    .required('Must enter a name'),\r\n  email: Yup.string()\r\n    .email('Must be a valid email address')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(8, 'Must be longer than 8')\r\n    .max(40, 'Must be shorter than 40')\r\n    .matches(/[0-9]/, 'Must have at least one digit')\r\n    .matches(/[A-Z]/, 'Must have at least one uppercase character')\r\n    .matches(/^[a-zA-Z0-9]{8,}$/, 'Must have only letters and digits')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst SignUpForm = () => {\r\n  const { errors: errorsApi } = useSelector(state => state.errorsReducer);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{ username: '', email: '', password: '' }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n        dispatch(registrAction(values));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit} style={{ marginTop: '70px', width: '300px' }}>\r\n          <Form.Item\r\n            validateStatus={touched.username && errors.username ? 'error' : null}\r\n            help={touched.username && errors.username ? errors.username : null}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              prefix={<Icon type=\"user\" />}\r\n              placeholder=\"Enter a username\"\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.email && errors.email ? 'error' : null}\r\n            help={touched.email && errors.email ? errors.email : null}\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter an email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.password && errors.password ? 'error' : null}\r\n            help={touched.password && errors.password ? errors.password : null}\r\n          >\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Form.Item>\r\n          {errorsApi && <Alert type=\"error\" message={JSON.stringify(errorsApi, null, 2)} />}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport SignUpForm from '../components/SignUpForm';\r\n\r\nconst SignUp = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <SignUpForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport Navbar from '../components/Navbar';\r\nimport Home from '../pages/Home';\r\nimport Login from '../pages/Login';\r\nimport SignUp from '../pages/SignUp';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst ConditionalRoute = ({ component: Comp, pathToRedirect, conditionFunc, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (conditionFunc() ? <Comp {...props} /> : <Redirect to={pathToRedirect} />)}\r\n    />\r\n  );\r\n};\r\n\r\nConditionalRoute.propTypes = {\r\n  component: PropTypes.instanceOf(Object).isRequired,\r\n  pathToRedirect: PropTypes.string.isRequired,\r\n  conditionFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Routes = () => {\r\n  const { loggedIn } = useSelector(state => state.userReducer);\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Navbar />\r\n      </Header>\r\n      <Content>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/home\" />\r\n          </Route>\r\n          <ConditionalRoute\r\n            path=\"/home\"\r\n            component={Home}\r\n            pathToRedirect=\"/login\"\r\n            conditionFunc={() => loggedIn}\r\n          />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n        </Switch>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst userData = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = userData ? { loggedIn: true, userData } : { loggedIn: false };\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [actions.loginSuccess](state, { payload: { user } }) {\r\n      return { loggedIn: true, user };\r\n    },\r\n    [actions.loginFailure]() {\r\n      return { loggedIn: false };\r\n    },\r\n    [actions.logout]() {\r\n      localStorage.removeItem('user');\r\n      return { loggedIn: false };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nconst errorsReducer = handleActions(\r\n  {\r\n    [actions.loginSuccess]() {\r\n      return {};\r\n    },\r\n    [actions.loginFailure](state, { payload: { errors } }) {\r\n      return { errors };\r\n    },\r\n    [actions.registrFailure](state, { payload: { errors } }) {\r\n      return { errors };\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default combineReducers({ userReducer, errorsReducer });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst devtools = () => window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nexport default createStore(reducers, compose(applyMiddleware(thunk), devtools()));\r\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Routes from './routes';\nimport store from './store';\nimport history from './history';\n\nfunction App() {\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <Provider store={store}>\n      <Router history={history}>\n        <Routes />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}