{"version":3,"sources":["api/index.js","history/index.js","store/actions/index.js","store/reducers/articlesReducer.js","store/reducers/pageSettingsReducer.js","store/reducers/errorsReducer.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","components/Navbar.jsx","components/Like.jsx","components/ArticlePreview.jsx","components/ArticlesList.jsx","components/UserProfile.jsx","routes/Home.jsx","components/LoginForm.jsx","routes/Login.jsx","components/SignUpForm.jsx","routes/SignUp.jsx","components/HistoryBackButton.jsx","components/ArticleActions.jsx","routes/Article.jsx","components/ArticleForm.jsx","routes/ArticleEdit.jsx","routes/ArticleAdd.jsx","routes/index.jsx","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","interceptors","request","use","token","JSON","parse","localStorage","getItem","headers","Authorization","err","Promise","reject","login","user","a","async","post","response","setItem","stringify","data","registration","getArticles","params","get","editArticle","slug","body","put","article","addArticle","deleteArticle","delete","setFavorite","unsetFavorite","createBrowserHistory","basename","loginRequest","createAction","loginSuccess","loginFailure","logout","registrRequest","registrSuccess","registrFailure","articlesRequest","articlesSuccess","articlesFailure","editArticleRequest","editArticleSuccess","editArticleFailure","deleteArticleRequest","deleteArticleSuccess","deleteArticleFailure","addArticleRequest","addArticleSuccess","addArticleFailure","setFavoriteRequest","setFavoriteSuccess","setFavoriteFailure","unsetFavoriteRequest","unsetFavoriteSuccess","unsetFavoriteFailure","changePage","setArticlesParams","loginAction","dispatch","API","userData","history","push","articlesAction","articles","articlesCount","articlesReducer","handleActions","actions","state","payload","newArticle","map","isLoading","filter","limit","pageSettingsReducer","pageNumber","currentPage","pageSize","errorsReducer","errors","initialState","loggedIn","userReducer","removeItem","combineReducers","pageSettings","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","withRouter","props","useSelector","useDispatch","location","theme","mode","defaultSelectedKeys","pathname","selectedKeys","style","lineHeight","display","Item","key","to","marginLeft","onClick","Like","favorited","favoritesCount","type","twoToneColor","fontSize","Meta","Card","ArticlePreview","title","author","description","createdAt","tagList","formattedDate","formatDistance","Date","locale","ruLocale","hoverable","extra","username","length","tag","ArticlesList","list","width","size","gridTemplateColumns","gridGap","UserProfile","marginRight","icon","email","marginTop","Home","useEffect","padding","flexGrow","current","total","onChange","page","offset","validationSchema","Yup","shape","required","password","LoginForm","errorsApi","readableErrors","Object","keys","reduce","acc","cur","join","initialValues","onSubmit","values","setSubmitting","touched","isSubmitting","handleChange","handleBlur","handleSubmit","validateStatus","help","id","prefix","placeholder","value","onBlur","htmlType","disabled","isEmpty","message","Login","justifyContent","alignItems","min","max","matches","SignUpForm","SignUp","HistoryBackButton","marginBottom","go","ArticleActions","defaultProps","Article","match","find","item","tags","minHeight","ArticleForm","actionToDispatch","inputTagRef","React","createRef","of","TextArea","autoSize","minRows","maxRows","name","render","remove","index","closable","onClose","ref","ArticleEdit","storageArticle","className","flexDirection","ArticleAdd","Header","Layout","Content","ConditionalRoute","Comp","component","pathToRedirect","conditionFunc","rest","Routes","maxWidth","exact","path","App","store","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"kWAEMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,4CAGXH,EAAII,aAAaC,QAAQC,KACvB,SAAAD,GAAY,IACFE,GAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IAAtDJ,MAIR,OAHIA,IACFF,EAAQO,QAAQC,cAAhB,gBAAyCN,IAEpCF,KAET,SAAAS,GAAG,OAAIC,QAAQC,OAAOF,MAGjB,I,MAAMG,EAAQ,SAAMC,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACInB,EAAIqB,KAAK,eAAgB,CAAEH,UAD/B,cACbI,EADa,OAEnBZ,aAAaa,QAAQ,OAAQf,KAAKgB,UAAUF,EAASG,KAAKP,OAFvC,kBAGZI,EAASG,KAAKP,MAHF,sCAKRQ,EAAe,SAAMR,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACHnB,EAAIqB,KAAK,SAAU,CAAEH,UADlB,cACpBI,EADoB,yBAEnBA,EAASG,KAAKP,MAFK,sCAKfS,EAAc,SAAMC,GAAN,eAAAT,EAAAC,OAAA,kEAAAD,EAAA,MACFnB,EAAI6B,IAAI,YAAa,CAAED,YADrB,cACnBN,EADmB,yBAElBA,EAASG,MAFS,sCAadK,EAAc,SAAOC,EAAMC,GAAb,iBAAAb,EAAAC,OAAA,kEAAAD,EAAA,MACFnB,EAAIiC,IAAJ,oBAAqBF,GAAQ,CAAEG,QAASF,KADtC,cACnBV,EADmB,OAGfY,EACNZ,EADFG,KAAQS,QAHe,kBAKlBA,GALkB,sCAQdC,EAAa,SAAMH,GAAN,iBAAAb,EAAAC,OAAA,kEAAAD,EAAA,MACDnB,EAAIqB,KAAK,YAAa,CAAEa,QAASF,KADhC,cAClBV,EADkB,OAGdY,EACNZ,EADFG,KAAQS,QAHc,kBAKjBA,GALiB,sCAQbE,EAAgB,SAAML,GAAN,eAAAZ,EAAAC,OAAA,kEAAAD,EAAA,MACJnB,EAAIqC,OAAJ,oBAAwBN,KADpB,cACrBT,EADqB,yBAEpBA,GAFoB,sCAKhBgB,EAAc,SAAMP,GAAN,iBAAAZ,EAAAC,OAAA,kEAAAD,EAAA,MACFnB,EAAIqB,KAAJ,oBAAsBU,EAAtB,eADE,cACnBT,EADmB,OAGfY,EACNZ,EADFG,KAAQS,QAHe,kBAKlBA,GALkB,sCAQdK,EAAgB,SAAMR,GAAN,iBAAAZ,EAAAC,OAAA,kEAAAD,EAAA,MACJnB,EAAIqC,OAAJ,oBAAwBN,EAAxB,eADI,cACrBT,EADqB,OAGjBY,EACNZ,EADFG,KAAQS,QAHiB,kBAKpBA,GALoB,sC,QCnEdM,cAAqB,CAAEC,SAAU,UCEnCC,EAAeC,YAAa,sBAC5BC,EAAeD,YAAa,sBAC5BE,EAAeF,YAAa,sBAE5BG,EAASH,YAAa,eAEtBI,EAAiBJ,YAAa,wBAC9BK,EAAiBL,YAAa,wBAC9BM,EAAiBN,YAAa,wBAE9BO,EAAkBP,YAAa,oBAC/BQ,EAAkBR,YAAa,oBAC/BS,EAAkBT,YAAa,oBAE/BU,EAAqBV,YAAa,wBAClCW,EAAqBX,YAAa,wBAClCY,EAAqBZ,YAAa,wBAElCa,EAAuBb,YAAa,0BACpCc,EAAuBd,YAAa,0BACpCe,EAAuBf,YAAa,0BAEpCgB,EAAoBhB,YAAa,uBACjCiB,EAAoBjB,YAAa,uBACjCkB,EAAoBlB,YAAa,uBAEjCmB,EAAqBnB,YAAa,wBAClCoB,EAAqBpB,YAAa,wBAClCqB,GAAqBrB,YAAa,wBAElCsB,GAAuBtB,YAAa,0BACpCuB,GAAuBvB,YAAa,0BACpCwB,GAAuBxB,YAAa,0BAEpCyB,GAAazB,YAAa,uBAC1B0B,GAAoB1B,YAAa,uBA8DjC2B,GAAc,SAAApD,GAAI,OAAI,SAAMqD,GAAN,eAAApD,EAAAC,OAAA,uDACjCmD,EAAS7B,KADwB,oBAAAvB,EAAA,MAGRqD,EAAUtD,IAHF,OAGzBI,EAHyB,OAI/BiD,EAAS3B,EAAa,CAAE6B,SAAUnD,KAClCoD,EAAQC,KAAK,SALkB,gDAO/BJ,EAAS1B,EAAa,KAAIvB,SAASG,OAPJ,0DAsBtBmD,GAAiB,SAAAhD,GAAM,OAAI,SAAM2C,GAAN,mBAAApD,EAAAC,OAAA,uDACtCmD,EAASrB,KAD6B,SAGpCqB,EAASF,GAAkB,CAAEzC,YAHO,WAAAT,EAAA,MAIMqD,EAAgB5C,IAJtB,gBAI5BiD,EAJ4B,EAI5BA,SAAUC,EAJkB,EAIlBA,cAClBP,EAASpB,EAAgB,CAAE0B,WAAUC,mBALD,kDAOpCP,EAASnB,EAAgB,KAAI9B,SAASG,OAPF,2DCpEzBsD,GAlDSC,aAAa,mBAEhCC,IAFgC,SAELC,EAFK,GAE4B,IAAbtD,EAAY,EAAvBuD,QAAWvD,OAC9C,OAAO,eAAKsD,EAAZ,CAAmBtD,cAHY,cAKhCqD,GALgC,SAKJC,EALI,GAK0C,IAAjBE,EAAgB,EAApCD,QAAWjD,QACzC2C,EAAWK,EAAML,SAASQ,KAAI,SAAAnD,GAAO,OACzCA,EAAQH,OAASqD,EAAWrD,KAAOqD,EAAalD,KAElD,OAAO,eAAKgD,EAAZ,CAAmBL,gBATY,cAWhCI,IAXgC,SAWFC,EAXE,GAW4C,IAAjBE,EAAgB,EAApCD,QAAWjD,QAC3C2C,EAAWK,EAAML,SAASQ,KAAI,SAAAnD,GAAO,OACzCA,EAAQH,OAASqD,EAAWrD,KAAOqD,EAAalD,KAElD,OAAO,eAAKgD,EAAZ,CAAmBL,gBAfY,cAiBhCI,GAjBgC,SAiBJC,GAC3B,OAAO,eAAKA,EAAZ,CAAmBI,WAAW,OAlBC,cAoBhCL,GApBgC,SAoBJC,EApBI,GAoB0C,IAAjBE,EAAgB,EAApCD,QAAWjD,QACzC2C,EAAWK,EAAML,SAASQ,KAAI,SAAAnD,GAAO,OACzCA,EAAQH,OAASqD,EAAWrD,KAAOqD,EAAalD,KAElD,OAAO,eAAKgD,EAAZ,CAAmBL,WAAUS,WAAW,OAxBT,cA0BhCL,GA1BgC,SA0BLC,GAC1B,OAAO,eAAKA,EAAZ,CAAmBI,WAAW,OA3BC,cA6BhCL,GA7BgC,SA6BLC,EA7BK,GA6ByC,IAAjBE,EAAgB,EAApCD,QAAWjD,QACxC2C,EAAQ,sBAAOK,EAAML,UAAb,CAAuBO,IACrC,OAAO,eAAKF,EAAZ,CAAmBL,WAAUS,WAAW,OA/BT,cAiChCL,GAjCgC,SAiCFC,EAjCE,GAiC6B,IAAXnD,EAAU,EAArBoD,QAAWpD,KAC3C8C,EAAWK,EAAML,SAASU,QAAO,SAAArD,GAAO,OAAIA,EAAQH,OAASA,KACnE,OAAO,eAAKmD,EAAZ,CAAmBL,gBAnCY,cAqChCI,GArCgC,SAqCPC,GACxB,OAAO,eAAKA,EAAZ,CAAmBI,WAAW,OAtCC,cAwChCL,GAxCgC,SAwCPC,EAxCO,GAwC2C,IAAD,IAAxCC,QAAWN,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,cACtD,OAAO,eAAKI,EAAZ,CAAmBL,WAAUC,gBAAeQ,WAAW,OAzCxB,cA2ChCL,GA3CgC,SA2CPC,GACxB,OAAO,eAAKA,EAAZ,CAAmBL,SAAU,QA5CE,GAFhB,CAAEA,SAAU,GAAIC,cAAe,EAAGQ,WAAW,EAAO1D,OAAQ,CAAE4D,MAAO,MCW3EC,GATaT,YAAc,eAErCC,IAFoC,SAEhBC,EAFgB,GAEqB,IAAjBQ,EAAgB,EAA3BP,QAAWO,WACvC,OAAO,eAAKR,EAAZ,CAAmBS,YAAaD,OALjB,CAAEC,YAAa,EAAGC,SAAU,KC2BlCC,GA3BOb,aAAa,iBAAC,EAE/BC,GAF8B,WAG7B,MAAO,MAHsB,YAAC,EAK/BA,GAL8B,WAM7B,MAAO,MANsB,YAAC,EAQ/BA,GAR8B,SAQRC,EARQ,GAS7B,OADqD,EAAvBC,QAAWW,UARZ,YAAC,EAW/Bb,GAX8B,SAWNC,EAXM,GAY7B,OADuD,EAAvBC,QAAWW,UAXd,YAAC,EAc/Bb,GAd8B,SAcFC,EAdE,GAcwC,IAAjCC,EAAgC,EAAhCA,QACpC,OADoE,EAAvBA,QAAWW,QACvCX,KAfY,YAAC,EAiB/BF,GAjB8B,SAiBHC,EAjBG,GAiBuC,IAAjCC,EAAgC,EAAhCA,QACnC,OADmE,EAAvBA,QAAWW,QACtCX,KAlBY,YAAC,EAoB/BF,GApB8B,SAoBAC,EApBA,GAoB0C,IAAjCC,EAAgC,EAAhCA,QACtC,OADsE,EAAvBA,QAAWW,QACzCX,KArBY,GAwBjC,ICxBIjE,GAAOV,KAAKC,MAAMC,aAAaC,QAAQ,SACvCoF,GAAe7E,GACjB,CAAE8E,UAAU,EAAMV,WAAW,EAAOpE,SACpC,CAAE8E,UAAU,EAAOV,WAAW,GAqBnBW,GAnBKjB,aAAa,iBAAC,EAE7BC,GAF4B,SAENC,GACrB,OAAO,eAAKA,EAAZ,CAAmBI,WAAW,OAHH,YAAC,EAK7BL,GAL4B,SAKNC,EALM,GAM3B,MAAO,CAAEI,WAAW,EAAOU,UAAU,EAAM9E,KADY,EAAzBiE,QAAWV,aALd,YAAC,EAQ7BQ,GAR4B,WAS3B,MAAO,CAAEe,UAAU,MATQ,YAAC,EAW7Bf,GAX4B,WAa3B,OADAvE,aAAawF,WAAW,QACjB,CAAEF,UAAU,MAbQ,GAgB/BD,IClBaI,eAAgB,CAC7BjF,KAAM+E,GACNH,OAAQD,GACRhB,SAAUE,GACVqB,aAAcX,KCHDY,eAAYC,GAAUC,YAAQC,YAAgBC,KAFtCC,OAAOC,8BAAgCD,OAAOC,iC,uDCyCtDC,gBAvCA,SAAAC,GAAU,IACfb,EAAac,aAAY,SAAA5B,GAAK,OAAIA,EAAMhE,QAAxC8E,SACFzB,EAAWwC,cACTC,EAAaH,EAAbG,SAOR,OACE,kBAAC,KAAD,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAACH,EAASI,UAC/BC,aAAc,CAACL,EAASI,UACxBE,MAAO,CAAEC,WAAY,OAAQC,QAAS,SAEtC,kBAAC,KAAKC,KAAN,CAAWC,IAAI,SACb,kBAAC,KAAD,CAASC,GAAG,SAAZ,UAEA3B,GACA,kBAAC,KAAKyB,KAAN,CAAWC,IAAI,SAASJ,MAAO,CAAEM,WAAY,SAC3C,kBAAC,KAAD,CAASD,GAAG,UAAZ,UAGH3B,GACC,kBAAC,KAAKyB,KAAN,CAAWH,MAAO,CAAEM,WAAY,QAAUC,QAtBtB,WACxBtD,EAASU,KACTV,EAASU,GAAuB,CAAEO,MAAO,QAoBrC,e,oECLOsC,GAvBF,SAAC,GAAiB,IAAf5F,EAAc,EAAdA,QACRqC,EAAWwC,cACTgB,EAAoC7F,EAApC6F,UAAWC,EAAyB9F,EAAzB8F,eAAgBjG,EAASG,EAATH,KAGnC,OACE,6BACE,kBAAC,KAAD,CACEkG,KAAK,QACLhB,MAAOc,EAAY,UAAY,WAC/BG,aAAa,UACbZ,MAAO,CAAEa,SAAU,QACnBN,QAASE,EARS,kBAAMxD,ERyCG,SAAAxC,GAAI,OAAI,SAAMwC,GAAN,eAAApD,EAAAC,OAAA,uDACzCmD,EAASN,MADgC,oBAAA9C,EAAA,MAGjBqD,EAAkBzC,IAHD,OAGjCG,EAHiC,OAIvCqC,EAASL,GAAqB,CAAEhC,aAJO,gDAMvCqC,EAASJ,GAAqB,KAAI7C,SAASG,OANJ,yDQzCFwD,CAA4BlD,KAD7C,kBAAMwC,ERgCG,SAAAxC,GAAI,OAAI,SAAMwC,GAAN,eAAApD,EAAAC,OAAA,uDACvCmD,EAAST,KAD8B,oBAAA3C,EAAA,MAGfqD,EAAgBzC,IAHD,OAG/BG,EAH+B,OAIrCqC,EAASR,EAAmB,CAAE7B,aAJO,gDAMrCqC,EAASP,GAAmB,KAAI1C,SAASG,OANJ,yDQhCFwD,CAA0BlD,OAW3D,0BAAMuF,MAAO,CAAEa,SAAU,SAAWH,KCZlCI,GAASC,KAATD,KAiCOE,GA/BQ,SAAC,GAAiB,IAAfpG,EAAc,EAAdA,QAChBqG,EAAyDrG,EAAzDqG,MAAOC,EAAkDtG,EAAlDsG,OAAQC,EAA0CvG,EAA1CuG,YAAaC,EAA6BxG,EAA7BwG,UAAW3G,EAAkBG,EAAlBH,KAAM4G,EAAYzG,EAAZyG,QAC/CC,EAAgBC,aAAe,IAAIC,KAAKJ,GAAY,IAAII,KAAQ,CAAEC,OAAQC,OAKhF,OACE,kBAAC,KAAD,CAAMC,WAAS,EAACV,MAAOA,EAAOW,MAAO,kBAAC,GAAD,CAAMhH,QAASA,KAClD,2BAAIuG,GACJ,kBAAC,KAAD,CAAMd,GAAE,oBAAe5F,GAAQ8F,QANf,WAClBnH,aAAaa,QAAQ,gBAAiBf,KAAKgB,UAAUU,MAKnD,0EAGA,kBAACkG,GAAD,CAAMK,YAAW,qDAAaG,EAAb,qCACjB,kBAACR,GAAD,CAAMK,YAAW,yCAAWD,EAAOW,YAClCR,EAAQS,OAAS,GAChB,uDAEGT,EAAQtD,KAAI,SAAAgE,GAAG,OACd,kBAAC,KAAD,CAAK3B,IAAK2B,GAAMA,SCJbC,GApBM,WAAO,IAAD,EACOxC,aAAY,SAAA5B,GAAK,MAAK,CACpDL,SAAUK,EAAML,SAASA,SACzBS,UAAWJ,EAAML,SAASS,cAFpBT,EADiB,EACjBA,SAAUS,EADO,EACPA,UAKZiE,EAAO1E,EAASQ,KAAI,SAAAnD,GAAO,OAAI,kBAAC,GAAD,CAAgBwF,IAAKxF,EAAQH,KAAMG,QAASA,OAOjF,OAAOoD,EACL,kBAAC,KAAD,CAAMgC,MAAO,CAAEkC,MAAO,QAAUC,KAAK,UAErC,yBAAKnC,MATQ,CACbE,QAAS,OACTkC,oBAAqB,wCACrBC,QAAS,SAMYJ,I,oBCfjBnB,GAASC,KAATD,KAqDOwB,GAnDK,WAAO,IAAD,EACG9C,aAAY,SAAA5B,GAAK,MAAK,CAC/CU,SAAUV,EAAMkB,aAAaR,SAC7BhE,OAAQsD,EAAML,SAASjD,OACvBV,KAAMgE,EAAMhE,KAAKA,SAHX0E,EADgB,EAChBA,SAAU1E,EADM,EACNA,KAKZqD,EAAWwC,cAEjB,OACE,kBAAC,KAAD,CACEkC,WAAS,EACT3B,MAAO,CAAEkC,MAAO,IAAKK,YAAa,QAClCtB,MAAO,kBAAC,KAAD,CAAQkB,KAAM,GAAIK,KAAK,UAE9B,kBAAC,GAAD,CAAMvB,MAAOrH,EAAKiI,SAAUV,YAAavH,EAAK6I,QAC9C,kBAAC,KAAD,CACEzC,MAAO,CAAE0C,UAAW,OAAQR,MAAO,QACnCvB,KAAK,UACLJ,QAAS,WACPtD,EAASU,GAAuB,CAAEuD,OAAQtH,EAAKiI,cAJnD,4GASA,kBAAC,KAAD,CACE7B,MAAO,CAAE0C,UAAW,OAAQR,MAAO,QACnCvB,KAAK,UACLJ,QAAS,kBAAMtD,EAASU,GAAuB,CAAEO,MAAOI,OAH1D,4GAOA,kBAAC,KAAD,CACE0B,MAAO,CAAE0C,UAAW,OAAQR,MAAO,QACnCvB,KAAK,UACLJ,QAAS,kBACPtD,EAASU,GAAuB,CAAEO,MAAOI,EAAUmC,UAAW7G,EAAKiI,cAJvE,mIASA,kBAAC,KAAD,CACE7B,MAAO,CAAE0C,UAAW,OAAQR,MAAO,QACnCvB,KAAK,UACLJ,QAAS,kBAAMnD,EAAQC,KAAK,UAH9B,0HCFSsF,GAvCF,WAAO,IACVjE,EAAac,aAAY,SAAA5B,GAAK,OAAIA,EAAMhE,QAAxC8E,SACFzB,EAAWwC,cAFA,EAGwCD,aAAY,SAAA5B,GAAK,MAAK,CAC7EL,SAAUK,EAAML,SAASA,SACzBC,cAAeI,EAAML,SAASC,cAC9Ba,YAAaT,EAAMkB,aAAaT,YAChCC,SAAUV,EAAMkB,aAAaR,SAC7BhE,OAAQsD,EAAML,SAASjD,WALjB+D,EAHS,EAGTA,YAAaC,EAHJ,EAGIA,SAAUd,EAHd,EAGcA,cAAelD,EAH7B,EAG6BA,OAQ9CsI,qBAAU,WACR3F,EAASU,GAAuB,CAAEO,MAAO,QACxC,IAOH,OACE,yBAAK8B,MAAO,CAAE6C,QAAS,OAAQ3C,QAAS,SACrCxB,GAAY,kBAAC,GAAD,MACb,yBAAKsB,MAAO,CAAE8C,SAAU,MACtB,kBAAC,GAAD,MACCtF,EAAgBc,GACf,kBAAC,KAAD,CACE0B,MAAO,CAAE0C,UAAW,QACpBK,QAAS1E,EACT2E,MAAOxF,EACPc,SAAUA,EACV2E,SAhBe,SAAAC,GZuCK,IAAA9E,EYtC5BnB,GZsC4BmB,EYtCM8E,EZsCQ,SAAMjG,GAAN,SAAApD,EAAAC,OAAA,gDAC5CmD,EAASH,GAAW,CAAEsB,gBADsB,wCYrC1CnB,EAASU,GAAA,eAA4BrD,EAA5B,CAAoC6I,QAASD,EAAO,GAAK5E,Y,yDCfhE8E,GAAmBC,YAAaC,MAAM,CAC1Cb,MAAOY,YACJZ,MAAM,iCACNc,SAAS,qBACZC,SAAUH,YAAaE,SAAS,0BAmEnBE,GAhEG,WAAO,IACPC,EAAclE,aAAY,SAAA5B,GAAK,OAAIA,KAA3CY,OACFvB,EAAWwC,cACXkE,EAAiBC,OAAOC,KAAKH,GAAWI,QAAO,SAACC,EAAKC,GACzD,MAAM,GAAN,OAAUD,EAAV,aAAkBC,EAAlB,aAA0BN,EAAUM,GAAKC,KAAK,QAC7C,IACH,OACE,kBAAC,KAAD,CACEC,cAAe,CAAEzB,MAAO,GAAIe,SAAU,IACtCJ,iBAAkBA,GAClBe,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdpH,EAASU,GAAoByG,IAC7BC,GAAc,MAGf,gBAAGD,EAAH,EAAGA,OAAQ5F,EAAX,EAAWA,OAAQ8F,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,WAAYC,EAApE,EAAoEA,aAApE,OACC,kBAAC,KAAD,CAAMP,SAAUO,EAAc1E,MAAO,CAAE0C,UAAW,OAAQR,MAAO,UAC/D,kBAAC,KAAK/B,KAAN,CACEwE,eAAgBL,EAAQ7B,OAASjE,EAAOiE,MAAQ,QAAU,KAC1DmC,KAAMN,EAAQ7B,OAASjE,EAAOiE,MAAQjE,EAAOiE,MAAQ,MAErD,kBAAC,KAAD,CACE9B,KAAK,QACLkE,GAAG,QACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,iBACZC,MAAOZ,EAAO3B,MACdQ,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,CACEwE,eAAgBL,EAAQd,UAAYhF,EAAOgF,SAAW,QAAU,KAChEoB,KAAMN,EAAQd,UAAYhF,EAAOgF,SAAWhF,EAAOgF,SAAW,MAE9D,kBAAC,KAAD,CACE7C,KAAK,WACLkE,GAAG,WACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,mBACZC,MAAOZ,EAAOZ,SACdP,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,KACE,kBAAC,KAAD,CACEH,MAAO,CAAEkC,MAAO,QAChBvB,KAAK,UACLuE,SAAS,SACTC,SAAUZ,GAJZ,UADF,MASK,kBAAC,KAAD,CAAMlE,GAAG,WAAT,mBAEH+E,mBAAQ1B,IAAc,kBAAC,KAAD,CAAO/C,KAAK,QAAQ0E,QAAS1B,SCzDhD2B,GAbD,WAMZ,OACE,yBAAKtF,MANQ,CACbE,QAAS,OACTqF,eAAgB,SAChBC,WAAY,WAIV,kBAAC,GAAD,QCHApC,GAAmBC,YAAaC,MAAM,CAC1CzB,SAAUwB,YACPoC,IAAI,EAAG,yBACPC,IAAI,GAAI,2BACRnC,SAAS,qBACZd,MAAOY,YACJZ,MAAM,iCACNc,SAAS,qBACZC,SAAUH,YACPoC,IAAI,EAAG,yBACPC,IAAI,GAAI,2BACRC,QAAQ,QAAS,gCACjBA,QAAQ,QAAS,8CACjBA,QAAQ,oBAAqB,qCAC7BpC,SAAS,0BAgFCqC,GA7EI,WAAO,IACRlC,EAAclE,aAAY,SAAA5B,GAAK,OAAIA,KAA3CY,OACFvB,EAAWwC,cACXkE,EAAiBC,OAAOC,KAAKH,GAAWI,QAAO,SAACC,EAAKC,GACzD,MAAM,GAAN,OAAUD,EAAV,aAAkBC,EAAlB,aAA0BN,EAAUM,GAAKC,KAAK,QAC7C,IACH,OACE,kBAAC,KAAD,CACEC,cAAe,CAAErC,SAAU,GAAIY,MAAO,GAAIe,SAAU,IACpDJ,iBAAkBA,GAClBe,SAAU,SAACC,EAAD,GAAgC,If6EnBxK,Ee7EFyK,EAAoB,EAApBA,cACnBA,GAAc,GACdpH,Gf2EqBrD,Ee3EUwK,Ef2EF,SAAMnH,GAAN,iBAAApD,EAAAC,OAAA,uDACnCmD,EAASxB,KAD0B,oBAAA5B,EAAA,MAG3BqD,EAAiBtD,IAHU,OAIzB6I,EAAoB7I,EAApB6I,MAAOe,EAAa5J,EAAb4J,SACfvG,EAASD,GAAY,CAAEyF,QAAOe,cALG,gDAOjCvG,EAAStB,EAAe,KAAI3B,SAASG,OAPJ,2De1E7BkK,GAAc,MAGf,gBAAGD,EAAH,EAAGA,OAAQ5F,EAAX,EAAWA,OAAQ8F,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,WAAYC,EAApE,EAAoEA,aAApE,OACC,kBAAC,KAAD,CAAMP,SAAUO,EAAc1E,MAAO,CAAE0C,UAAW,OAAQR,MAAO,UAC/D,kBAAC,KAAK/B,KAAN,CACEwE,eAAgBL,EAAQzC,UAAYrD,EAAOqD,SAAW,QAAU,KAChE+C,KAAMN,EAAQzC,UAAYrD,EAAOqD,SAAWrD,EAAOqD,SAAW,MAE9D,kBAAC,KAAD,CACElB,KAAK,OACLkE,GAAG,WACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,mBACZC,MAAOZ,EAAOvC,SACdoB,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,CACEwE,eAAgBL,EAAQ7B,OAASjE,EAAOiE,MAAQ,QAAU,KAC1DmC,KAAMN,EAAQ7B,OAASjE,EAAOiE,MAAQjE,EAAOiE,MAAQ,MAErD,kBAAC,KAAD,CACE9B,KAAK,QACLkE,GAAG,QACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,iBACZC,MAAOZ,EAAO3B,MACdQ,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,CACEwE,eAAgBL,EAAQd,UAAYhF,EAAOgF,SAAW,QAAU,KAChEoB,KAAMN,EAAQd,UAAYhF,EAAOgF,SAAWhF,EAAOgF,SAAW,MAE9D,kBAAC,KAAD,CACE7C,KAAK,WACLkE,GAAG,WACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,mBACZC,MAAOZ,EAAOZ,SACdP,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,KACE,kBAAC,KAAD,CACEH,MAAO,CAAEkC,MAAO,QAChBvB,KAAK,UACLuE,SAAS,SACTC,SAAUZ,GAJZ,aASAa,mBAAQ1B,IAAc,kBAAC,KAAD,CAAO/C,KAAK,QAAQ0E,QAAS1B,SC/EhDkC,GAbA,WAMb,OACE,yBAAK7F,MANQ,CACbE,QAAS,OACTqF,eAAgB,SAChBC,WAAY,WAIV,kBAAC,GAAD,QCESM,GATW,WAExB,OACE,kBAAC,KAAD,CAAQ9F,MAAO,CAAE+F,aAAc,QAAUpF,KAAK,UAAUJ,QAFvC,kBAAMnD,EAAQ4I,IAAI,KAEnC,mCCCEC,GAAiB,SAAC,GAAuB,IAArBrL,EAAoB,EAApBA,QAAShB,EAAW,EAAXA,KAAW,EACdgB,EAAtBsG,cADoC,MAC3B,GAD2B,EACvBzG,EAASG,EAATH,KACfwC,EAAWwC,cAKjB,OACE,yBAAKO,MAAO,CAAEE,QAAS,OAAQsF,WAAY,WACzC,0BAAMxF,MAAO,CAAEuC,YAAa,SAC1B,kBAAC,GAAD,CAAM3H,QAASA,KAEhBhB,EAAKiI,WAAaX,EAAOW,UACxB,6BACE,kBAAC,KAAD,CACElB,KAAK,UACLwB,KAAK,QACLmB,MAAM,SACNd,KAAK,OACLjC,QAAS,WACPnD,EAAQC,KAAR,oBAA0B5C,EAA1B,aAGJ,kBAAC,KAAD,CACEkG,KAAK,SACLwB,KAAK,QACLmB,MAAM,SACNd,KAAK,QACLjC,QAzBgB,WACxBtD,ElBoE+B,SAAAxC,GAAI,OAAI,SAAMwC,GAAN,SAAApD,EAAAC,OAAA,uDACzCmD,EAASf,KADgC,oBAAArC,EAAA,MAGjCqD,EAAkBzC,IAHe,OAIvCwC,EAASd,EAAqB,CAAE1B,UAJO,gDAMvCwC,EAASb,EAAqB,KAAIpC,SAASG,OANJ,yDkBpE9BwD,CAA4BlD,IACrC2C,EAAQC,KAAR,WAoCJ4I,GAAeC,aAAe,CAC5BtL,QAAS,GACThB,KAAM,IAGOqM,UC7CPnF,GAASC,KAATD,KAmCOqF,GAjCC,SAAC,GAAe,IACtB1L,EADqB,EAAZ2L,MACM9L,OAAfG,KADqB,EAEE+E,aAAY,SAAA5B,GAAK,MAAK,CACnDhD,QAASgD,EAAML,SAASA,SAAS8I,MAAK,SAAAC,GAAI,OAAIA,EAAK7L,OAASA,MAAS,GACrEb,KAAMgE,EAAMhE,KAAKA,SAFXA,EAFqB,EAErBA,KAFqB,IAEfgB,eAFe,MAEL,GAFK,IAMLA,EAAhBsG,cANqB,MAMZ,GANY,EAOvBI,EAAgBC,aAAe,IAAIC,KAAK5G,EAAQwG,WAAa,GAAI,IAAII,KAAQ,CACjFC,OAAQC,OAGJ6E,EAAO3L,EAAQyG,SAAWzG,EAAQyG,QAAQtD,KAAI,SAAAgE,GAAG,OAAI,kBAAC,KAAD,CAAK3B,IAAK2B,GAAMA,MAE3E,OACE,yBAAK/B,MAAO,CAAE6C,QAAS,SACrB,kBAAC,GAAD,MACA,kBAAC,KAAD,CACElB,WAAS,EACTV,MAAOrG,EAAQqG,MACfW,MAAO,kBAAC,GAAD,CAAgBhH,QAASA,EAAShB,KAAMA,KAE/C,uBAAGoG,MAAO,CAAEwG,UAAW,UAAY5L,EAAQF,MAC3C,kBAAC,GAAD,CAAMyG,YAAW,qDAAaG,EAAb,6EAA6CJ,EAAOW,YACpE0E,GAAQA,EAAKzE,OAAS,GAAK,wDAAUyE,MC1BxCE,GAAc,SAAC,GAA8C,IAAD,IAA3CvC,qBAA2C,MAA3B,GAA2B,EAAvBwC,EAAuB,EAAvBA,iBACjCzF,EAAsCiD,EAAtCjD,MAAOE,EAA+B+C,EAA/B/C,YAAazG,EAAkBwJ,EAAlBxJ,KAAM2G,EAAY6C,EAAZ7C,QAClBqC,EAAclE,aAAY,SAAA5B,GAAK,MAAK,CAClDY,OAAQZ,EAAMY,WADRA,OAGFmI,EAAcC,IAAMC,YACpB5J,EAAWwC,cACX2D,EAAmBC,YAAaC,MAAM,CAC1CrC,MAAOoC,YAAaE,SAAS,qBAC7BpC,YAAakC,YAAaE,SAAS,2BACnC7I,KAAM2I,YAAaE,SAAS,oBAC5BlC,QAASgC,WACNyD,GAAGzD,YAAaE,SAAS,oBACzBkC,IAAI,EAAG,6BAGN9B,EAAiBC,OAAOC,KAAKH,GAAWI,QAAO,SAACC,EAAKC,GACzD,MAAM,GAAN,OAAUD,EAAV,aAAkBC,EAAlB,aAA0BN,EAAUM,GAAKC,KAAK,QAC7C,IAEH,OACE,kBAAC,KAAD,CACEC,cAAe,CAAEjD,QAAOE,cAAazG,OAAM2G,WAC3C+B,iBAAkBA,EAClBe,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBA,GAAc,GACdpH,EAASyJ,EAAiBtC,IAC1BC,GAAc,MAGf,gBAAGD,EAAH,EAAGA,OAAQ5F,EAAX,EAAWA,OAAQ8F,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,WAAYC,EAApE,EAAoEA,aAApE,OACC,kBAAC,KAAD,CAAMP,SAAUO,GACd,kBAAC,KAAKvE,KAAN,CACEwE,eAAgBL,EAAQrD,OAASzC,EAAOyC,MAAQ,QAAU,KAC1D2D,KAAMN,EAAQrD,OAASzC,EAAOyC,MAAQzC,EAAOyC,MAAQ,MAErD,kBAAC,KAAD,CACEN,KAAK,QACLkE,GAAG,QACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,gBACZC,MAAOZ,EAAOnD,MACdgC,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,CACEwE,eAAgBL,EAAQnD,aAAe3C,EAAO2C,YAAc,QAAU,KACtEyD,KAAMN,EAAQnD,aAAe3C,EAAO2C,YAAc3C,EAAO2C,YAAc,MAEvE,kBAAC,KAAD,CACER,KAAK,cACLkE,GAAG,cACHC,OAAQ,kBAAC,KAAD,CAAMnE,KAAK,SACnBoE,YAAY,sBACZC,MAAOZ,EAAOjD,YACd8B,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,CACEwE,eAAgBL,EAAQ5J,MAAQ8D,EAAO9D,KAAO,QAAU,KACxDkK,KAAMN,EAAQ5J,MAAQ8D,EAAO9D,KAAO8D,EAAO9D,KAAO,MAElD,kBAAC,KAAMqM,SAAP,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCvG,KAAK,OACLkE,GAAG,OACHE,YAAY,eACZC,MAAOZ,EAAO1J,KACduI,SAAUuB,EACVS,OAAQR,KAGZ,kBAAC,KAAKtE,KAAN,CACEwE,eAAgBL,EAAQjD,SAAW7C,EAAO6C,QAAU,QAAU,KAC9DuD,KAAMN,EAAQjD,SAAW7C,EAAO6C,QAAU7C,EAAO6C,QAAU,MAE3D,kBAAC,KAAD,CACE8F,KAAK,UACLC,OAAQ,YAAuB,IAApBC,EAAmB,EAAnBA,OAAQhK,EAAW,EAAXA,KACXkJ,EACJnC,EAAO/C,SACP+C,EAAO/C,QAAQtD,KAAI,SAACgE,EAAKuF,GAAN,OACjB,kBAAC,KAAD,CACElH,IAAK2B,EACLwF,UAAQ,EACRJ,KAAI,kBAAaG,EAAb,KACJE,QAAS,kBAAMH,EAAOC,KAErBvF,MAGP,OACE,6BACGwE,EACD,kBAAC,KAAD,CAAOkB,IAAKd,IACZ,kBAAC,KAAD,CACEhG,KAAK,UACLJ,QAAS,WACPlD,EAAKsJ,EAAY5D,QAAQnF,MAAMoH,OAC/B2B,EAAY5D,QAAQnF,MAAMoH,MAAQ,KAJtC,4EAcV,kBAAC,KAAK7E,KAAN,KACE,kBAAC,KAAD,CACEH,MAAO,CAAEkC,MAAO,QAChBvB,KAAK,UACLuE,SAAS,SACTC,SAAUZ,GAJZ,mHAUAa,mBAAQ1B,IAAc,kBAAC,KAAD,CAAO/C,KAAK,QAAQ0E,QAAS1B,SAY/D8C,GAAYP,aAAe,CACzBhC,cAAe,IAGFuC,UC9FAiB,GA3CK,SAAC,GAAe,IAC1BjN,EADyB,EAAZ2L,MACE9L,OAAfG,KACFwC,EAAWwC,cAFgB,EAGFD,aAAY,SAAA5B,GAAK,MAAK,CACnDY,OAAQZ,EAAMY,OACd5D,QAASgD,EAAML,SAASA,SAAS8I,MAAK,SAAAC,GAAI,OAAIA,EAAK7L,OAASA,KAC5DuD,UAAWJ,EAAML,SAASS,cAHpBpD,EAHyB,EAGzBA,QAASoD,EAHgB,EAGhBA,UAMX2J,EAAiBzO,KAAKC,MAAMC,aAAaC,QAAQ,kBATtB,EAUa+L,mBAAQxK,GAAW+M,EAAiB/M,EAA1EqG,EAVyB,EAUzBA,MAAOvG,EAVkB,EAUlBA,KAAMyG,EAVY,EAUZA,YAAaE,EAVD,EAUCA,QAUlC,OACE,yBAAKuG,UAAU,UAAU5H,MATZ,CACbE,QAAS,OACTqF,eAAgB,SAChBsC,cAAe,SACfrC,WAAY,SACZ9C,UAAW,SAKR1E,EACC,kBAAC,KAAD,CAAMgC,MAAO,CAAEkC,MAAO,QAAUC,KAAK,UAErC,yBAAKyF,UAAU,UAAU5H,MAAO,CAAEkC,MAAO,UACvC,yBAAKlC,MAAO,CAAEE,QAAS,OAAQgC,MAAO,SACpC,kBAAC,GAAD,MADF,IACwB,wBAAIlC,MAAO,CAAEM,WAAY,SAAzB,+HAExB,kBAAC,GAAD,CACE4D,cAAe,CAAEjD,QAAOvG,OAAMyG,cAAaE,WAC3CqF,iBAvBe,SAAAtC,GAAM,OAAInH,ErByEJ,SAACxC,EAAMC,GAAP,OAAgB,SAAMuC,GAAN,eAAApD,EAAAC,OAAA,uDAC/CmD,EAASlB,KADsC,oBAAAlC,EAAA,MAGvBqD,EAAgBzC,EAAMC,IAHC,OAGvCE,EAHuC,OAI7CqC,EAASjB,EAAmB,CAAEpB,aAC9BwC,EAAQC,KAAR,oBAA0B5C,IALmB,gDAO7CwC,EAAShB,EAAmB,KAAIjC,SAASG,OAPI,yDqBzEHwD,CAA0BlD,EAAM2J,UCqB/D0D,GA/BI,WAAO,IAChB9J,EAAcwB,aAAY,SAAA5B,GAAK,MAAK,CAC1CI,UAAWJ,EAAML,SAASS,cADpBA,UAGFf,EAAWwC,cAWjB,OACE,yBAAKmI,UAAU,UAAU5H,MATZ,CACbE,QAAS,OACT2H,cAAe,SACftC,eAAgB,SAChBC,WAAY,SACZ9C,UAAW,SAKR1E,EACC,kBAAC,KAAD,CAAMgC,MAAO,CAAEkC,MAAO,QAAUC,KAAK,UAErC,yBAAKyF,UAAU,UAAU5H,MAAO,CAAEkC,MAAO,UACvC,yBAAKlC,MAAO,CAAEE,QAAS,OAAQgC,MAAO,SACpC,kBAAC,GAAD,MADF,IACwB,wBAAIlC,MAAO,CAAEM,WAAY,SAAzB,uGAExB,kBAAC,GAAD,CAAaoG,iBAnBI,SAAAtC,GAAM,OAAInH,GtByDLvC,EsBzDuC0J,EtByD/B,SAAMnH,GAAN,eAAApD,EAAAC,OAAA,uDACtCmD,EAASZ,KAD6B,oBAAAxC,EAAA,MAGdqD,EAAexC,IAHD,OAG9BE,EAH8B,OAIpCqC,EAASX,EAAkB,CAAE1B,aAC7BwC,EAAQC,KAAR,oBAA0BzC,EAAQH,OALE,gDAOpCwC,EAASV,EAAkB,KAAIvC,SAASG,OAPJ,2DAAR,IAAAO,QuBxDxBqN,GAAoBC,KAApBD,OAAQE,GAAYD,KAAZC,QAEVC,GAAmB,SAAC,GAAiE,IAApDC,EAAmD,EAA9DC,UAAiBC,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,cAAkBC,EAAW,+DACxF,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEnB,OAAQ,SAAA7H,GAAK,OAAK+I,IAAkB,kBAACH,EAAS5I,GAAY,kBAAC,IAAD,CAAUc,GAAIgI,SA8C/DG,GAnCA,WAAO,IACZ9J,EAAac,aAAY,SAAA5B,GAAK,OAAIA,EAAMhE,QAAxC8E,SACR,OACE,kBAAC,KAAD,CAAQkJ,UAAU,SAAS5H,MAAO,CAAEyI,SAAU,WAC5C,kBAACV,GAAD,KACE,yBAAKH,UAAU,SACf,kBAAC,GAAD,OAEF,kBAACK,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAUtI,GAAG,WAEf,kBAAC,GAAD,CACEsI,KAAK,OACLP,UAAWN,GACXO,eAAe,SACfC,cAAe,kBAAM5J,KAEvB,kBAAC,GAAD,CACEiK,KAAK,uBACLP,UAAWV,GACXW,eAAe,SACfC,cAAe,kBAAM5J,KAEvB,kBAAC,IAAD,CAAOiK,KAAK,QAAQP,UAAWzF,KAC/B,kBAAC,IAAD,CAAOgG,KAAK,SAASP,UAAW9C,KAChC,kBAAC,IAAD,CAAOqD,KAAK,UAAUP,UAAWvC,KACjC,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,kBAAkBP,UAAWjC,SCtC1CyC,OAXf,WACE,OAEE,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,IAAD,CAAQzL,QAASA,GACf,kBAAC,GAAD,SCFY0L,QACW,cAA7B1J,OAAOM,SAASqJ,UAEe,UAA7B3J,OAAOM,SAASqJ,UAEhB3J,OAAOM,SAASqJ,SAAS3C,MACvB,2DCZN4C,IAAS5B,OAEP,kBAAC,GAAD,MACA6B,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAlP,GACjCA,EAAamP,kB","file":"static/js/main.a686b4d5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://conduit.productionready.io/api/',\r\n});\r\n\r\napi.interceptors.request.use(\r\n  request => {\r\n    const { token } = JSON.parse(localStorage.getItem('user')) || {};\r\n    if (token) {\r\n      request.headers.Authorization = `Token ${token}`;\r\n    }\r\n    return request;\r\n  },\r\n  err => Promise.reject(err)\r\n);\r\n\r\nexport const login = async user => {\r\n  const response = await api.post('/users/login', { user });\r\n  localStorage.setItem('user', JSON.stringify(response.data.user));\r\n  return response.data.user;\r\n};\r\nexport const registration = async user => {\r\n  const response = await api.post('/users', { user });\r\n  return response.data.user;\r\n};\r\n\r\nexport const getArticles = async params => {\r\n  const response = await api.get('/articles', { params });\r\n  return response.data;\r\n};\r\n\r\nexport const getOneArticle = async slug => {\r\n  const response = await api.get(`/articles/${slug}`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const editArticle = async (slug, body) => {\r\n  const response = await api.put(`/articles/${slug}`, { article: body });\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const addArticle = async body => {\r\n  const response = await api.post('/articles', { article: body });\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const deleteArticle = async slug => {\r\n  const response = await api.delete(`/articles/${slug}`);\r\n  return response;\r\n};\r\n\r\nexport const setFavorite = async slug => {\r\n  const response = await api.post(`/articles/${slug}/favorite`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const unsetFavorite = async slug => {\r\n  const response = await api.delete(`/articles/${slug}/favorite`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport default api;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({ basename: '/blog' });\r\n","import { createAction } from 'redux-actions';\r\nimport * as API from '../../api';\r\nimport history from '../../history';\r\n\r\nexport const loginRequest = createAction('USER_LOGIN_REQUEST');\r\nexport const loginSuccess = createAction('USER_LOGIN_SUCCESS');\r\nexport const loginFailure = createAction('USER_LOGIN_FAILURE');\r\n\r\nexport const logout = createAction('USER_LOGOUT');\r\n\r\nexport const registrRequest = createAction('USER_REGISTR_REQUEST');\r\nexport const registrSuccess = createAction('USER_REGISTR_SUCCESS');\r\nexport const registrFailure = createAction('USER_REGISTR_FAILURE');\r\n\r\nexport const articlesRequest = createAction('ARTICLES_REQUEST');\r\nexport const articlesSuccess = createAction('ARTICLES_SUCCESS');\r\nexport const articlesFailure = createAction('ARTICLES_FAILURE');\r\n\r\nexport const editArticleRequest = createAction('EDIT_ARTICLE_REQUEST');\r\nexport const editArticleSuccess = createAction('EDIT_ARTICLE_SUCCESS');\r\nexport const editArticleFailure = createAction('EDIT_ARTICLE_FAILURE');\r\n\r\nexport const deleteArticleRequest = createAction('DELETE_ARTICLE_REQUEST');\r\nexport const deleteArticleSuccess = createAction('DELETE_ARTICLE_SUCCESS');\r\nexport const deleteArticleFailure = createAction('DELETE_ARTICLE_FAILURE');\r\n\r\nexport const addArticleRequest = createAction('ADD_ARTICLE_REQUEST');\r\nexport const addArticleSuccess = createAction('ADD_ARTICLE_SUCCESS');\r\nexport const addArticleFailure = createAction('ADD_ARTICLE_FAILURE');\r\n\r\nexport const setFavoriteRequest = createAction('SET_FAVORITE_REQUEST');\r\nexport const setFavoriteSuccess = createAction('SET_FAVORITE_SUCCESS');\r\nexport const setFavoriteFailure = createAction('SET_FAVORITE_FAILURE');\r\n\r\nexport const unsetFavoriteRequest = createAction('UNSET_FAVORITE_REQUEST');\r\nexport const unsetFavoriteSuccess = createAction('UNSET_FAVORITE_SUCCESS');\r\nexport const unsetFavoriteFailure = createAction('UNSET_FAVORITE_FAILURE');\r\n\r\nexport const changePage = createAction('CHANGE_CURRENT_PAGE');\r\nexport const setArticlesParams = createAction('SET_ARTICLES_PARAMS');\r\n\r\nexport const setFavoriteAction = slug => async dispatch => {\r\n  dispatch(setFavoriteRequest());\r\n  try {\r\n    const article = await API.setFavorite(slug);\r\n    dispatch(setFavoriteSuccess({ article }));\r\n  } catch (err) {\r\n    dispatch(setFavoriteFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const unsetFavoriteAction = slug => async dispatch => {\r\n  dispatch(unsetFavoriteRequest());\r\n  try {\r\n    const article = await API.unsetFavorite(slug);\r\n    dispatch(unsetFavoriteSuccess({ article }));\r\n  } catch (err) {\r\n    dispatch(unsetFavoriteFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const changePageAction = pageNumber => async dispatch => {\r\n  dispatch(changePage({ pageNumber }));\r\n};\r\n\r\nexport const setArticlesParamsAction = params => async dispatch => {\r\n  dispatch(setArticlesParams({ params }));\r\n};\r\n\r\nexport const addArticleAction = body => async dispatch => {\r\n  dispatch(addArticleRequest());\r\n  try {\r\n    const article = await API.addArticle(body);\r\n    dispatch(addArticleSuccess({ article }));\r\n    history.push(`/articles/${article.slug}`);\r\n  } catch (err) {\r\n    dispatch(addArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const deleteArticleAction = slug => async dispatch => {\r\n  dispatch(deleteArticleRequest());\r\n  try {\r\n    await API.deleteArticle(slug);\r\n    dispatch(deleteArticleSuccess({ slug }));\r\n  } catch (err) {\r\n    dispatch(deleteArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const editArticleAction = (slug, body) => async dispatch => {\r\n  dispatch(editArticleRequest());\r\n  try {\r\n    const article = await API.editArticle(slug, body);\r\n    dispatch(editArticleSuccess({ article }));\r\n    history.push(`/articles/${slug}`);\r\n  } catch (err) {\r\n    dispatch(editArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const loginAction = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await API.login(user);\r\n    dispatch(loginSuccess({ userData: response }));\r\n    history.push('/home');\r\n  } catch (err) {\r\n    dispatch(loginFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const registrAction = user => async dispatch => {\r\n  dispatch(registrRequest());\r\n  try {\r\n    await API.registration(user);\r\n    const { email, password } = user;\r\n    dispatch(loginAction({ email, password }));\r\n  } catch (err) {\r\n    dispatch(registrFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const articlesAction = params => async dispatch => {\r\n  dispatch(articlesRequest());\r\n  try {\r\n    dispatch(setArticlesParams({ params }));\r\n    const { articles, articlesCount } = await API.getArticles(params);\r\n    dispatch(articlesSuccess({ articles, articlesCount }));\r\n  } catch (err) {\r\n    dispatch(articlesFailure(err.response.data));\r\n  }\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst initialState = { articles: [], articlesCount: 0, isLoading: false, params: { limit: 10 } };\r\n\r\nconst articlesReducer = handleActions(\r\n  {\r\n    [actions.setArticlesParams](state, { payload: { params } }) {\r\n      return { ...state, params };\r\n    },\r\n    [actions.setFavoriteSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.unsetFavoriteSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.editArticleRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.editArticleSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles, isLoading: false };\r\n    },\r\n    [actions.addArticleRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.addArticleSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = [...state.articles, newArticle];\r\n      return { ...state, articles, isLoading: false };\r\n    },\r\n    [actions.deleteArticleSuccess](state, { payload: { slug } }) {\r\n      const articles = state.articles.filter(article => article.slug !== slug);\r\n      return { ...state, articles };\r\n    },\r\n    [actions.articlesRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.articlesSuccess](state, { payload: { articles, articlesCount } }) {\r\n      return { ...state, articles, articlesCount, isLoading: false };\r\n    },\r\n    [actions.articlesFailure](state) {\r\n      return { ...state, articles: [] };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default articlesReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst initialState = { currentPage: 1, pageSize: 10 };\r\n\r\nconst pageSettingsReducer = handleActions(\r\n  {\r\n    [actions.changePage](state, { payload: { pageNumber } }) {\r\n      return { ...state, currentPage: pageNumber };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default pageSettingsReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst errorsReducer = handleActions(\r\n  {\r\n    [actions.loginSuccess]() {\r\n      return '';\r\n    },\r\n    [actions.registrSuccess]() {\r\n      return '';\r\n    },\r\n    [actions.loginFailure](state, { payload: { errors } }) {\r\n      return errors;\r\n    },\r\n    [actions.registrFailure](state, { payload: { errors } }) {\r\n      return errors;\r\n    },\r\n    [actions.editArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n    [actions.addArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n    [actions.deleteArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default errorsReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user\r\n  ? { loggedIn: true, isLoading: false, user }\r\n  : { loggedIn: false, isLoading: false };\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [actions.loginRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.loginSuccess](state, { payload: { userData } }) {\r\n      return { isLoading: false, loggedIn: true, user: userData };\r\n    },\r\n    [actions.loginFailure]() {\r\n      return { loggedIn: false };\r\n    },\r\n    [actions.logout]() {\r\n      localStorage.removeItem('user');\r\n      return { loggedIn: false };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport articlesReducer from './articlesReducer';\r\nimport pageSettingsReducer from './pageSettingsReducer';\r\nimport errorsReducer from './errorsReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  errors: errorsReducer,\r\n  articles: articlesReducer,\r\n  pageSettings: pageSettingsReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst devtools = () => window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nexport default createStore(reducers, compose(applyMiddleware(thunk), devtools()));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Navbar = props => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { location } = props;\r\n\r\n  const handleLogoutClick = () => {\r\n    dispatch(actions.logout());\r\n    dispatch(actions.articlesAction({ limit: 10 }));\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode=\"horizontal\"\r\n      defaultSelectedKeys={[location.pathname]}\r\n      selectedKeys={[location.pathname]}\r\n      style={{ lineHeight: '64px', display: 'flex' }}\r\n    >\r\n      <Menu.Item key=\"/home\">\r\n        <NavLink to=\"/home\">Home</NavLink>\r\n      </Menu.Item>\r\n      {!loggedIn && (\r\n        <Menu.Item key=\"/login\" style={{ marginLeft: 'auto' }}>\r\n          <NavLink to=\"/login\">Login</NavLink>\r\n        </Menu.Item>\r\n      )}\r\n      {loggedIn && (\r\n        <Menu.Item style={{ marginLeft: 'auto' }} onClick={handleLogoutClick}>\r\n          Log out\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  location: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Like = ({ article }) => {\r\n  const dispatch = useDispatch();\r\n  const { favorited, favoritesCount, slug } = article;\r\n  const handleSetLike = () => dispatch(actions.setFavoriteAction(slug));\r\n  const handleUnsetLike = () => dispatch(actions.unsetFavoriteAction(slug));\r\n  return (\r\n    <div>\r\n      <Icon\r\n        type=\"heart\"\r\n        theme={favorited ? 'twoTone' : 'outlined'}\r\n        twoToneColor=\"#eb2f96\"\r\n        style={{ fontSize: '20px' }}\r\n        onClick={favorited ? handleUnsetLike : handleSetLike}\r\n      />\r\n      <span style={{ fontSize: '22px' }}>{favoritesCount}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nLike.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Tag } from 'antd';\r\nimport Like from './Like';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ArticlePreview = ({ article }) => {\r\n  const { title, author, description, createdAt, slug, tagList } = article;\r\n  const formattedDate = formatDistance(new Date(createdAt), new Date(), { locale: ruLocale });\r\n\r\n  const linkOnClick = () => {\r\n    localStorage.setItem('openedArticle', JSON.stringify(article));\r\n  };\r\n  return (\r\n    <Card hoverable title={title} extra={<Like article={article} />}>\r\n      <p>{description}</p>\r\n      <Link to={`/articles/${slug}`} onClick={linkOnClick}>\r\n        Читать далее...\r\n      </Link>\r\n      <Meta description={`Создана ${formattedDate} назад`} />\r\n      <Meta description={`Автор ${author.username}`} />\r\n      {tagList.length > 0 && (\r\n        <p>\r\n          Тэги:\r\n          {tagList.map(tag => (\r\n            <Tag key={tag}>{tag}</Tag>\r\n          ))}\r\n        </p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default ArticlePreview;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Spin } from 'antd';\r\nimport ArticlePreview from './ArticlePreview';\r\n\r\nconst ArticlesList = () => {\r\n  const { articles, isLoading } = useSelector(state => ({\r\n    articles: state.articles.articles,\r\n    isLoading: state.articles.isLoading,\r\n  }));\r\n\r\n  const list = articles.map(article => <ArticlePreview key={article.slug} article={article} />);\r\n  const styles = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(350px, 1fr))',\r\n    gridGap: '10px',\r\n  };\r\n\r\n  return isLoading ? (\r\n    <Spin style={{ width: '100%' }} size=\"large\" />\r\n  ) : (\r\n    <div style={styles}>{list}</div>\r\n  );\r\n};\r\n\r\nexport default ArticlesList;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Avatar, Button } from 'antd';\r\nimport * as actions from '../store/actions';\r\nimport history from '../history';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst UserProfile = () => {\r\n  const { pageSize, user } = useSelector(state => ({\r\n    pageSize: state.pageSettings.pageSize,\r\n    params: state.articles.params,\r\n    user: state.user.user,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card\r\n      hoverable\r\n      style={{ width: 240, marginRight: '10px' }}\r\n      title={<Avatar size={64} icon=\"user\" />}\r\n    >\r\n      <Meta title={user.username} description={user.email} />\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          dispatch(actions.articlesAction({ author: user.username }));\r\n        }}\r\n      >\r\n        Показать мои статьи\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => dispatch(actions.articlesAction({ limit: pageSize }))}\r\n      >\r\n        Показать все статьи\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() =>\r\n          dispatch(actions.articlesAction({ limit: pageSize, favorited: user.username }))\r\n        }\r\n      >\r\n        Показать понравившиеся\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => history.push('/add')}\r\n      >\r\n        Добавить новую статью\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useEffect } from 'react';\r\nimport { Pagination } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport * as actions from '../store/actions';\r\nimport UserProfile from '../components/UserProfile';\r\n\r\nconst Home = () => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { currentPage, pageSize, articlesCount, params } = useSelector(state => ({\r\n    articles: state.articles.articles,\r\n    articlesCount: state.articles.articlesCount,\r\n    currentPage: state.pageSettings.currentPage,\r\n    pageSize: state.pageSettings.pageSize,\r\n    params: state.articles.params,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.articlesAction({ limit: 10 }));\r\n  }, []);\r\n\r\n  const handlePageChange = page => {\r\n    dispatch(actions.changePageAction(page));\r\n    dispatch(actions.articlesAction({ ...params, offset: (page - 1) * pageSize }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '40px', display: 'flex' }}>\r\n      {loggedIn && <UserProfile />}\r\n      <div style={{ flexGrow: '1' }}>\r\n        <ArticlesList />\r\n        {articlesCount > pageSize && (\r\n          <Pagination\r\n            style={{ marginTop: '30px' }}\r\n            current={currentPage}\r\n            total={articlesCount}\r\n            pageSize={pageSize}\r\n            onChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { isEmpty } from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from '../store/actions';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Must be a valid email address')\r\n    .required('Email is required'),\r\n  password: Yup.string().required('Password is required'),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const readableErrors = Object.keys(errorsApi).reduce((acc, cur) => {\r\n    return `${acc}\\n${cur}: ${errorsApi[cur].join(',')}`;\r\n  }, '');\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        dispatch(actions.loginAction(values));\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit} style={{ marginTop: '70px', width: '300px' }}>\r\n          <Form.Item\r\n            validateStatus={touched.email && errors.email ? 'error' : null}\r\n            help={touched.email && errors.email ? errors.email : null}\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter an email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.password && errors.password ? 'error' : null}\r\n            help={touched.password && errors.password ? errors.password : null}\r\n          >\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to=\"/signup\">register now!</Link>\r\n          </Form.Item>\r\n          {!isEmpty(errorsApi) && <Alert type=\"error\" message={readableErrors} />}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { isEmpty } from 'lodash';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(1, 'Must have a character')\r\n    .max(50, 'Must be shorter than 50')\r\n    .required('Must enter a name'),\r\n  email: Yup.string()\r\n    .email('Must be a valid email address')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(8, 'Must be longer than 8')\r\n    .max(40, 'Must be shorter than 40')\r\n    .matches(/[0-9]/, 'Must have at least one digit')\r\n    .matches(/[A-Z]/, 'Must have at least one uppercase character')\r\n    .matches(/^[a-zA-Z0-9]{8,}$/, 'Must have only letters and digits')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst SignUpForm = () => {\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const readableErrors = Object.keys(errorsApi).reduce((acc, cur) => {\r\n    return `${acc}\\n${cur}: ${errorsApi[cur].join(',')}`;\r\n  }, '');\r\n  return (\r\n    <Formik\r\n      initialValues={{ username: '', email: '', password: '' }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        dispatch(actions.registrAction(values));\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit} style={{ marginTop: '70px', width: '300px' }}>\r\n          <Form.Item\r\n            validateStatus={touched.username && errors.username ? 'error' : null}\r\n            help={touched.username && errors.username ? errors.username : null}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              prefix={<Icon type=\"user\" />}\r\n              placeholder=\"Enter a username\"\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.email && errors.email ? 'error' : null}\r\n            help={touched.email && errors.email ? errors.email : null}\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter an email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.password && errors.password ? 'error' : null}\r\n            help={touched.password && errors.password ? errors.password : null}\r\n          >\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Form.Item>\r\n          {!isEmpty(errorsApi) && <Alert type=\"error\" message={readableErrors} />}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport SignUpForm from '../components/SignUpForm';\r\n\r\nconst SignUp = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <SignUpForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport history from '../history';\r\n\r\nconst HistoryBackButton = () => {\r\n  const returnBack = () => history.go(-1);\r\n  return (\r\n    <Button style={{ marginBottom: '30px' }} type=\"primary\" onClick={returnBack}>\r\n      Назад\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default HistoryBackButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport Like from './Like';\r\nimport history from '../history';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleActions = ({ article, user }) => {\r\n  const { author = {}, slug } = article;\r\n  const dispatch = useDispatch();\r\n  const handleDeleteClick = () => {\r\n    dispatch(actions.deleteArticleAction(slug));\r\n    history.push(`/`);\r\n  };\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <span style={{ marginRight: '20px' }}>\r\n        <Like article={article} />\r\n      </span>\r\n      {user.username === author.username && (\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            shape=\"circle\"\r\n            icon=\"edit\"\r\n            onClick={() => {\r\n              history.push(`/articles/${slug}/edit`);\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"danger\"\r\n            size=\"large\"\r\n            shape=\"circle\"\r\n            icon=\"close\"\r\n            onClick={handleDeleteClick}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nArticleActions.propTypes = {\r\n  article: PropTypes.instanceOf(Object),\r\n  user: PropTypes.instanceOf(Object),\r\n};\r\n\r\nArticleActions.defaultProps = {\r\n  article: {},\r\n  user: {},\r\n};\r\n\r\nexport default ArticleActions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport { useSelector } from 'react-redux';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport { Card, Tag } from 'antd';\r\nimport HistoryBackButton from '../components/HistoryBackButton';\r\nimport ArticleActions from '../components/ArticleActions';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Article = ({ match }) => {\r\n  const { slug } = match.params;\r\n  const { user, article = {} } = useSelector(state => ({\r\n    article: state.articles.articles.find(item => item.slug === slug) || {},\r\n    user: state.user.user,\r\n  }));\r\n  const { author = {} } = article;\r\n  const formattedDate = formatDistance(new Date(article.createdAt || 0), new Date(), {\r\n    locale: ruLocale,\r\n  });\r\n\r\n  const tags = article.tagList && article.tagList.map(tag => <Tag key={tag}>{tag}</Tag>);\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <HistoryBackButton />\r\n      <Card\r\n        hoverable\r\n        title={article.title}\r\n        extra={<ArticleActions article={article} user={user} />}\r\n      >\r\n        <p style={{ minHeight: '200px' }}>{article.body}</p>\r\n        <Meta description={`Создана ${formattedDate} назад. Автор - ${author.username}`} />\r\n        {tags && tags.length > 0 && <p>Тэги: {tags}</p>}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Icon, Button, Alert, Tag } from 'antd';\r\nimport { Formik, FieldArray } from 'formik';\r\n\r\nconst ArticleForm = ({ initialValues = {}, actionToDispatch }) => {\r\n  const { title, description, body, tagList } = initialValues;\r\n  const { errors: errorsApi } = useSelector(state => ({\r\n    errors: state.errors,\r\n  }));\r\n  const inputTagRef = React.createRef();\r\n  const dispatch = useDispatch();\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    body: Yup.string().required('Body is required'),\r\n    tagList: Yup.array()\r\n      .of(Yup.string().required('Enter a tagname'))\r\n      .min(1, 'Must be minimum one tag'),\r\n  });\r\n\r\n  const readableErrors = Object.keys(errorsApi).reduce((acc, cur) => {\r\n    return `${acc}\\n${cur}: ${errorsApi[cur].join(',')}`;\r\n  }, '');\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ title, description, body, tagList }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        dispatch(actionToDispatch(values));\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Item\r\n            validateStatus={touched.title && errors.title ? 'error' : null}\r\n            help={touched.title && errors.title ? errors.title : null}\r\n          >\r\n            <Input\r\n              type=\"title\"\r\n              id=\"title\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter a title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.description && errors.description ? 'error' : null}\r\n            help={touched.description && errors.description ? errors.description : null}\r\n          >\r\n            <Input\r\n              type=\"description\"\r\n              id=\"description\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a description\"\r\n              value={values.description}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.body && errors.body ? 'error' : null}\r\n            help={touched.body && errors.body ? errors.body : null}\r\n          >\r\n            <Input.TextArea\r\n              autoSize={{ minRows: 8, maxRows: 8 }}\r\n              type=\"body\"\r\n              id=\"body\"\r\n              placeholder=\"Enter a body\"\r\n              value={values.body}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.tagList && errors.tagList ? 'error' : null}\r\n            help={touched.tagList && errors.tagList ? errors.tagList : null}\r\n          >\r\n            <FieldArray\r\n              name=\"tagList\"\r\n              render={({ remove, push }) => {\r\n                const tags =\r\n                  values.tagList &&\r\n                  values.tagList.map((tag, index) => (\r\n                    <Tag\r\n                      key={tag}\r\n                      closable\r\n                      name={`tagList[${index}]`}\r\n                      onClose={() => remove(index)}\r\n                    >\r\n                      {tag}\r\n                    </Tag>\r\n                  ));\r\n                return (\r\n                  <div>\r\n                    {tags}\r\n                    <Input ref={inputTagRef} />\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={() => {\r\n                        push(inputTagRef.current.state.value);\r\n                        inputTagRef.current.state.value = '';\r\n                      }}\r\n                    >\r\n                      Добавить тег\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Сохранить изменения\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          {!isEmpty(errorsApi) && <Alert type=\"error\" message={readableErrors} />}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nArticleForm.propTypes = {\r\n  initialValues: PropTypes.instanceOf(Object),\r\n  actionToDispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nArticleForm.defaultProps = {\r\n  initialValues: {},\r\n};\r\n\r\nexport default ArticleForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport { Spin } from 'antd';\r\nimport HistoryBackButton from '../components/HistoryBackButton';\r\nimport ArticleForm from '../components/ArticleForm';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleEdit = ({ match }) => {\r\n  const { slug } = match.params;\r\n  const dispatch = useDispatch();\r\n  const { article, isLoading } = useSelector(state => ({\r\n    errors: state.errors,\r\n    article: state.articles.articles.find(item => item.slug === slug),\r\n    isLoading: state.articles.isLoading,\r\n  }));\r\n  const actionToDispatch = values => dispatch(actions.editArticleAction(slug, values));\r\n  const storageArticle = JSON.parse(localStorage.getItem('openedArticle'));\r\n  const { title, body, description, tagList } = isEmpty(article) ? storageArticle : article;\r\n\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '70px',\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={styles}>\r\n      {isLoading ? (\r\n        <Spin style={{ width: '100%' }} size=\"large\" />\r\n      ) : (\r\n        <div className=\"content\" style={{ width: '500px' }}>\r\n          <div style={{ display: 'flex', width: '100%' }}>\r\n            <HistoryBackButton /> <h1 style={{ marginLeft: 'auto' }}> Редактирование статьи</h1>\r\n          </div>\r\n          <ArticleForm\r\n            initialValues={{ title, body, description, tagList }}\r\n            actionToDispatch={actionToDispatch}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nArticleEdit.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default ArticleEdit;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Spin } from 'antd';\r\nimport HistoryBackButton from '../components/HistoryBackButton';\r\nimport ArticleForm from '../components/ArticleForm';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleAdd = () => {\r\n  const { isLoading } = useSelector(state => ({\r\n    isLoading: state.articles.isLoading,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const actionToDispatch = values => dispatch(actions.addArticleAction(values));\r\n\r\n  const styles = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: '70px',\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={styles}>\r\n      {isLoading ? (\r\n        <Spin style={{ width: '100%' }} size=\"large\" />\r\n      ) : (\r\n        <div className=\"content\" style={{ width: '500px' }}>\r\n          <div style={{ display: 'flex', width: '100%' }}>\r\n            <HistoryBackButton /> <h1 style={{ marginLeft: 'auto' }}> Добавление статьи</h1>\r\n          </div>\r\n          <ArticleForm actionToDispatch={actionToDispatch} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleAdd;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport Navbar from '../components/Navbar';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport Article from './Article';\r\nimport ArticleEdit from './ArticleEdit';\r\nimport ArticleAdd from './ArticleAdd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst ConditionalRoute = ({ component: Comp, pathToRedirect, conditionFunc, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (conditionFunc() ? <Comp {...props} /> : <Redirect to={pathToRedirect} />)}\r\n    />\r\n  );\r\n};\r\n\r\nConditionalRoute.propTypes = {\r\n  component: PropTypes.instanceOf(Object).isRequired,\r\n  pathToRedirect: PropTypes.string.isRequired,\r\n  conditionFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Routes = () => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  return (\r\n    <Layout className=\"layout\" style={{ maxWidth: '1440px' }}>\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Navbar />\r\n      </Header>\r\n      <Content>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/home\" />\r\n          </Route>\r\n          <ConditionalRoute\r\n            path=\"/add\"\r\n            component={ArticleAdd}\r\n            pathToRedirect=\"/login\"\r\n            conditionFunc={() => loggedIn}\r\n          />\r\n          <ConditionalRoute\r\n            path=\"/articles/:slug/edit\"\r\n            component={ArticleEdit}\r\n            pathToRedirect=\"/login\"\r\n            conditionFunc={() => loggedIn}\r\n          />\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/articles/:slug\" component={Article} />\r\n        </Switch>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport Routes from './routes';\r\nimport history from './history';\r\n\r\nfunction App() {\r\n  return (\r\n    // eslint-disable-next-line react/jsx-filename-extension\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <Routes />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // eslint-disable-next-line react/jsx-filename-extension\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}