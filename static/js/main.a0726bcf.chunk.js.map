{"version":3,"sources":["api/index.js","history/index.js","store/actions/index.js","store/reducers/articlesReducer.js","store/reducers/pageSettingsReducer.js","store/reducers/errorsReducer.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","components/Navbar.jsx","components/Like.jsx","components/ArticlePreview.jsx","components/ArticlesList.jsx","components/UserProfile.jsx","routes/Home.jsx","components/LoginForm.jsx","routes/Login.jsx","components/SignUpForm.jsx","routes/SignUp.jsx","components/HistoryBackButton.jsx","components/ArticleActions.jsx","routes/Article.jsx","routes/ArticleEdit.jsx","routes/ArticleAdd.jsx","routes/index.jsx","App.js","serviceWorker.js","index.js"],"names":["token","JSON","parse","localStorage","getItem","AuthorizationHeader","Authorization","api","axios","create","baseURL","headers","login","user","a","async","body","stringify","post","response","setItem","data","registration","getArticles","params","get","editArticle","slug","put","article","addArticle","deleteArticle","delete","setFavorite","unsetFavorite","createBrowserHistory","basename","loginRequest","createAction","loginSuccess","loginFailure","logout","registrRequest","registrSuccess","registrFailure","articlesRequest","articlesSuccess","articlesFailure","editArticleRequest","editArticleSuccess","editArticleFailure","deleteArticleRequest","deleteArticleSuccess","deleteArticleFailure","addArticleRequest","addArticleSuccess","addArticleFailure","setFavoriteRequest","setFavoriteSuccess","setFavoriteFailure","unsetFavoriteRequest","unsetFavoriteSuccess","unsetFavoriteFailure","changePage","setArticlesParams","articlesAction","dispatch","API","articles","articlesCount","articlesReducer","handleActions","actions","state","payload","newArticle","map","srticles","filter","limit","pageSettingsReducer","pageNumber","currentPage","pageSize","errorsReducer","errors","userData","initialState","loggedIn","userReducer","removeItem","combineReducers","pageSettings","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","withRouter","props","useSelector","useDispatch","location","theme","mode","defaultSelectedKeys","pathname","selectedKeys","style","lineHeight","display","Item","key","to","marginLeft","onClick","Like","favorited","favoritesCount","type","twoToneColor","fontSize","Meta","Card","ArticlePreview","title","author","description","createdAt","tagList","formattedDate","formatDistance","Date","locale","ruLocale","hoverable","extra","username","length","tag","ArticlesList","list","gridTemplateColumns","gridGap","UserProfile","width","marginRight","size","icon","marginTop","history","push","Home","useEffect","padding","flexGrow","current","total","onChange","page","offset","validationSchema","Yup","shape","email","required","password","LoginForm","errorsApi","initialValues","onSubmit","values","setSubmitting","resetForm","touched","isSubmitting","handleChange","handleBlur","handleSubmit","validateStatus","help","id","prefix","placeholder","value","onBlur","htmlType","disabled","isEmpty","message","Login","justifyContent","alignItems","min","max","matches","SignUpForm","SignUp","HistoryBackButton","marginBottom","go","ArticleActions","defaultProps","Article","match","find","item","tags","minHeight","ArticleEdit","storageArticle","inputTagRef","React","createRef","of","className","flexDirection","TextArea","autoSize","minRows","maxRows","name","render","remove","index","closable","onClose","ref","ArticleAdd","Header","Layout","Content","ConditionalRoute","Comp","component","pathToRedirect","conditionFunc","rest","Routes","maxWidth","exact","path","App","Boolean","hostname","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.a0726bcf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst { token } = JSON.parse(localStorage.getItem('user')) || {};\r\nconst AuthorizationHeader = token ? { Authorization: `Token ${token}` } : {};\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://conduit.productionready.io/api/',\r\n  headers: { ...AuthorizationHeader, 'Content-type': 'application/json' },\r\n});\r\n\r\nexport const login = async user => {\r\n  const body = JSON.stringify({ user });\r\n  const response = await api.post('/users/login', body);\r\n  localStorage.setItem('user', JSON.stringify(response.data.user));\r\n  return response.data.user;\r\n};\r\nexport const registration = async user => {\r\n  const body = JSON.stringify({ user });\r\n  const response = await api.post('/users', body);\r\n  return response.data.user;\r\n};\r\n\r\nexport const getArticles = async params => {\r\n  const response = await api.get('/articles', { params });\r\n  return response.data;\r\n};\r\n\r\nexport const getOneArticle = async slug => {\r\n  const response = await api.get(`/articles/${slug}`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const editArticle = async (slug, body) => {\r\n  const response = await api.put(`/articles/${slug}`, JSON.stringify({ article: body }));\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const addArticle = async body => {\r\n  const response = await api.post('/articles', JSON.stringify({ article: body }));\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const deleteArticle = async slug => {\r\n  const response = await api.delete(`/articles/${slug}`);\r\n  return response;\r\n};\r\n\r\nexport const setFavorite = async slug => {\r\n  const response = await api.post(`/articles/${slug}/favorite`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const unsetFavorite = async slug => {\r\n  const response = await api.delete(`/articles/${slug}/favorite`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport default api;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({ basename: '/blog' });\r\n","import { createAction } from 'redux-actions';\r\nimport * as API from '../../api';\r\nimport history from '../../history';\r\n\r\nexport const loginRequest = createAction('USER_LOGIN_REQUEST');\r\nexport const loginSuccess = createAction('USER_LOGIN_SUCCESS');\r\nexport const loginFailure = createAction('USER_LOGIN_FAILURE');\r\n\r\nexport const logout = createAction('USER_LOGOUT');\r\n\r\nexport const registrRequest = createAction('USER_REGISTR_REQUEST');\r\nexport const registrSuccess = createAction('USER_REGISTR_SUCCESS');\r\nexport const registrFailure = createAction('USER_REGISTR_FAILURE');\r\n\r\nexport const articlesRequest = createAction('ARTICLES_REQUEST');\r\nexport const articlesSuccess = createAction('ARTICLES_SUCCESS');\r\nexport const articlesFailure = createAction('ARTICLES_FAILURE');\r\n\r\nexport const editArticleRequest = createAction('EDIT_ARTICLE_REQUEST');\r\nexport const editArticleSuccess = createAction('EDIT_ARTICLE_SUCCESS');\r\nexport const editArticleFailure = createAction('EDIT_ARTICLE_FAILURE');\r\n\r\nexport const deleteArticleRequest = createAction('DELETE_ARTICLE_REQUEST');\r\nexport const deleteArticleSuccess = createAction('DELETE_ARTICLE_SUCCESS');\r\nexport const deleteArticleFailure = createAction('DELETE_ARTICLE_FAILURE');\r\n\r\nexport const addArticleRequest = createAction('ADD_ARTICLE_REQUEST');\r\nexport const addArticleSuccess = createAction('ADD_ARTICLE_SUCCESS');\r\nexport const addArticleFailure = createAction('ADD_ARTICLE_FAILURE');\r\n\r\nexport const setFavoriteRequest = createAction('SET_FAVORITE_REQUEST');\r\nexport const setFavoriteSuccess = createAction('SET_FAVORITE_SUCCESS');\r\nexport const setFavoriteFailure = createAction('SET_FAVORITE_FAILURE');\r\n\r\nexport const unsetFavoriteRequest = createAction('UNSET_FAVORITE_REQUEST');\r\nexport const unsetFavoriteSuccess = createAction('UNSET_FAVORITE_SUCCESS');\r\nexport const unsetFavoriteFailure = createAction('UNSET_FAVORITE_FAILURE');\r\n\r\nexport const changePage = createAction('CHANGE_CURRENT_PAGE');\r\nexport const setArticlesParams = createAction('SET_ARTICLES_PARAMS');\r\n\r\nexport const setFavoriteAction = slug => async dispatch => {\r\n  dispatch(setFavoriteRequest());\r\n  try {\r\n    const article = await API.setFavorite(slug);\r\n    dispatch(setFavoriteSuccess({ article }));\r\n  } catch (err) {\r\n    dispatch(setFavoriteFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const unsetFavoriteAction = slug => async dispatch => {\r\n  dispatch(unsetFavoriteRequest());\r\n  try {\r\n    const article = await API.unsetFavorite(slug);\r\n    dispatch(unsetFavoriteSuccess({ article }));\r\n  } catch (err) {\r\n    dispatch(unsetFavoriteFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const changePageAction = pageNumber => async dispatch => {\r\n  dispatch(changePage({ pageNumber }));\r\n};\r\n\r\nexport const setArticlesParamsAction = params => async dispatch => {\r\n  dispatch(setArticlesParams({ params }));\r\n};\r\n\r\nexport const addArticleAction = body => async dispatch => {\r\n  dispatch(addArticleRequest());\r\n  try {\r\n    const article = await API.addArticle(body);\r\n    dispatch(addArticleSuccess({ article }));\r\n    history.push(`/articles/${article.slug}`);\r\n  } catch (err) {\r\n    dispatch(addArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const deleteArticleAction = slug => async dispatch => {\r\n  dispatch(deleteArticleRequest());\r\n  try {\r\n    await API.deleteArticle(slug);\r\n    dispatch(deleteArticleSuccess({ slug }));\r\n  } catch (err) {\r\n    dispatch(deleteArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const editArticleAction = (slug, body) => async dispatch => {\r\n  dispatch(editArticleRequest());\r\n  try {\r\n    const article = await API.editArticle(slug, body);\r\n    dispatch(editArticleSuccess({ article }));\r\n    history.push(`/articles/${slug}`);\r\n  } catch (err) {\r\n    dispatch(editArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const loginAction = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await API.login(user);\r\n    dispatch(loginSuccess({ user: response }));\r\n    history.push('/home');\r\n  } catch (err) {\r\n    dispatch(loginFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const registrAction = user => async dispatch => {\r\n  dispatch(registrRequest());\r\n  try {\r\n    const response = await API.registration(user);\r\n    dispatch(registrSuccess({ user: response }));\r\n    history.push('/login');\r\n  } catch (err) {\r\n    dispatch(registrFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const articlesAction = params => async dispatch => {\r\n  dispatch(articlesRequest());\r\n  try {\r\n    dispatch(setArticlesParams({ params }));\r\n    const { articles, articlesCount } = await API.getArticles(params);\r\n    dispatch(articlesSuccess({ articles, articlesCount }));\r\n  } catch (err) {\r\n    dispatch(articlesFailure(err.response.data));\r\n  }\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst initialState = { articles: [], articlesCount: 0, params: { limit: 10 } };\r\n\r\nconst articlesReducer = handleActions(\r\n  {\r\n    [actions.setArticlesParams](state, { payload: { params } }) {\r\n      return { ...state, params };\r\n    },\r\n    [actions.setFavoriteSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.unsetFavoriteSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.editArticleSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.addArticleSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = [...state.articles, newArticle];\r\n      return { ...state, articles };\r\n    },\r\n    [actions.deleteArticleSuccess](state, { payload: { slug } }) {\r\n      const articles = state.srticles.filter(article => article.slug !== slug);\r\n      return { ...state, articles };\r\n    },\r\n    [actions.articlesSuccess](state, { payload: { articles, articlesCount } }) {\r\n      return { ...state, articles, articlesCount };\r\n    },\r\n    [actions.articlesFailure](state) {\r\n      return { ...state, articles: [] };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default articlesReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst initialState = { currentPage: 1, pageSize: 10 };\r\n\r\nconst pageSettingsReducer = handleActions(\r\n  {\r\n    [actions.changePage](state, { payload: { pageNumber } }) {\r\n      return { ...state, currentPage: pageNumber };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default pageSettingsReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst errorsReducer = handleActions(\r\n  {\r\n    [actions.loginSuccess]() {\r\n      return '';\r\n    },\r\n    [actions.loginFailure](state, { payload: { errors } }) {\r\n      return errors;\r\n    },\r\n    [actions.registrFailure](state, { payload: { errors } }) {\r\n      return errors;\r\n    },\r\n    [actions.editArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n    [actions.addArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n    [actions.deleteArticleSuccess](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default errorsReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst userData = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = userData ? { loggedIn: true, userData } : { loggedIn: false };\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [actions.loginSuccess](state, { payload: { user } }) {\r\n      return { loggedIn: true, user };\r\n    },\r\n    [actions.loginFailure]() {\r\n      return { loggedIn: false };\r\n    },\r\n    [actions.logout]() {\r\n      localStorage.removeItem('user');\r\n      return { loggedIn: false };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport articlesReducer from './articlesReducer';\r\nimport pageSettingsReducer from './pageSettingsReducer';\r\nimport errorsReducer from './errorsReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  errors: errorsReducer,\r\n  articles: articlesReducer,\r\n  pageSettings: pageSettingsReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst devtools = () => window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nexport default createStore(reducers, compose(applyMiddleware(thunk), devtools()));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Navbar = props => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { location } = props;\r\n\r\n  const handleLogoutClick = () => dispatch(actions.logout());\r\n\r\n  return (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode=\"horizontal\"\r\n      defaultSelectedKeys={[location.pathname]}\r\n      selectedKeys={[location.pathname]}\r\n      style={{ lineHeight: '64px', display: 'flex' }}\r\n    >\r\n      <Menu.Item key=\"/home\">\r\n        <NavLink to=\"/home\">Home</NavLink>\r\n      </Menu.Item>\r\n      {!loggedIn && (\r\n        <Menu.Item key=\"/login\" style={{ marginLeft: 'auto' }}>\r\n          <NavLink to=\"/login\">Login</NavLink>\r\n        </Menu.Item>\r\n      )}\r\n      {loggedIn && (\r\n        <Menu.Item style={{ marginLeft: 'auto' }} onClick={handleLogoutClick}>\r\n          Log out\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  location: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Like = ({ article }) => {\r\n  const dispatch = useDispatch();\r\n  const { favorited, favoritesCount, slug } = article;\r\n  const handleSetLike = () => dispatch(actions.setFavoriteAction(slug));\r\n  const handleUnsetLike = () => dispatch(actions.unsetFavoriteAction(slug));\r\n  return (\r\n    <div>\r\n      <Icon\r\n        type=\"heart\"\r\n        theme={favorited ? 'twoTone' : 'outlined'}\r\n        twoToneColor=\"#eb2f96\"\r\n        style={{ fontSize: '20px' }}\r\n        onClick={favorited ? handleUnsetLike : handleSetLike}\r\n      />\r\n      <span style={{ fontSize: '22px' }}>{favoritesCount}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nLike.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Tag } from 'antd';\r\nimport Like from './Like';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ArticlePreview = ({ article }) => {\r\n  const { title, author, description, createdAt, slug, tagList } = article;\r\n  const formattedDate = formatDistance(new Date(createdAt), new Date(), { locale: ruLocale });\r\n\r\n  const linkOnClick = () => {\r\n    localStorage.setItem('openedArticle', JSON.stringify(article));\r\n  };\r\n  return (\r\n    <Card hoverable title={title} extra={<Like article={article} />}>\r\n      <p>{description}</p>\r\n      <Link to={`/articles/${slug}`} onClick={linkOnClick}>\r\n        Читать далее...\r\n      </Link>\r\n      <Meta description={`Создана ${formattedDate} назад`} />\r\n      <Meta description={`Автор ${author.username}`} />\r\n      {tagList.length > 0 && (\r\n        <p>\r\n          Тэги:\r\n          {tagList.map(tag => (\r\n            <Tag key={tag}>{tag}</Tag>\r\n          ))}\r\n        </p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default ArticlePreview;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ArticlePreview from './ArticlePreview';\r\n// import { paginate } from '../functions';\r\n\r\nconst ArticlesList = () => {\r\n  const { articles /* , pageSize, currentPage */ } = useSelector(state => ({\r\n    articles: state.articles.articles,\r\n    pageSize: state.pageSettings.pageSize,\r\n    currentPage: state.pageSettings.currentPage,\r\n  }));\r\n  // const currentPageArticles = paginate(articles, currentPage, pageSize);\r\n  const list = articles.map(article => <ArticlePreview key={article.slug} article={article} />);\r\n  const styles = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(350px, 1fr))',\r\n    gridGap: '10px',\r\n  };\r\n\r\n  return <div style={styles}>{list}</div>;\r\n};\r\n\r\nexport default ArticlesList;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Avatar, Button } from 'antd';\r\nimport * as actions from '../store/actions';\r\nimport history from '../history';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst UserProfile = () => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const { pageSize } = useSelector(state => ({\r\n    pageSize: state.pageSettings.pageSize,\r\n    params: state.articles.params,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Card\r\n      hoverable\r\n      style={{ width: 240, marginRight: '10px' }}\r\n      title={<Avatar size={64} icon=\"user\" />}\r\n    >\r\n      <Meta title={user.username} description=\"www.instagram.com\" />\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          dispatch(actions.articlesAction({ author: user.username }));\r\n        }}\r\n      >\r\n        Показать мои статьи\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => dispatch(actions.articlesAction({ limit: pageSize }))}\r\n      >\r\n        Показать все статьи\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() =>\r\n          dispatch(actions.articlesAction({ limit: pageSize, favorited: user.username }))\r\n        }\r\n      >\r\n        Показать понравившиеся\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => history.push('/add')}\r\n      >\r\n        Добавить новую статью\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useEffect } from 'react';\r\nimport { Pagination } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport * as actions from '../store/actions';\r\nimport UserProfile from '../components/UserProfile';\r\n\r\nconst Home = () => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { currentPage, pageSize, articlesCount, params } = useSelector(state => ({\r\n    articles: state.articles.articles,\r\n    articlesCount: state.articles.articlesCount,\r\n    currentPage: state.pageSettings.currentPage,\r\n    pageSize: state.pageSettings.pageSize,\r\n    params: state.articles.params,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.articlesAction({ limit: 10 }));\r\n  }, []);\r\n\r\n  const handlePageChange = page => {\r\n    dispatch(actions.changePageAction(page));\r\n    dispatch(actions.articlesAction({ ...params, offset: (page - 1) * pageSize }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '40px', display: 'flex' }}>\r\n      {loggedIn && <UserProfile />}\r\n      <div style={{ flexGrow: '1' }}>\r\n        <ArticlesList />\r\n        <Pagination\r\n          style={{ marginTop: '30px' }}\r\n          current={currentPage}\r\n          total={articlesCount}\r\n          pageSize={pageSize}\r\n          onChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { isEmpty } from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginAction } from '../store/actions';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Must be a valid email address')\r\n    .required('Email is required'),\r\n  password: Yup.string().required('Password is required'),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n        dispatch(loginAction(values));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit} style={{ marginTop: '70px', width: '300px' }}>\r\n          <Form.Item\r\n            validateStatus={touched.email && errors.email ? 'error' : null}\r\n            help={touched.email && errors.email ? errors.email : null}\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter an email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.password && errors.password ? 'error' : null}\r\n            help={touched.password && errors.password ? errors.password : null}\r\n          >\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to=\"/signup\">register now!</Link>\r\n          </Form.Item>\r\n          {!isEmpty(errorsApi) && (\r\n            <Alert type=\"error\" message={JSON.stringify(errorsApi, null, 2)} />\r\n          )}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { isEmpty } from 'lodash';\r\nimport { Form, Input, Icon, Button, Alert } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrAction } from '../store/actions';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(1, 'Must have a character')\r\n    .max(50, 'Must be shorter than 50')\r\n    .required('Must enter a name'),\r\n  email: Yup.string()\r\n    .email('Must be a valid email address')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(8, 'Must be longer than 8')\r\n    .max(40, 'Must be shorter than 40')\r\n    .matches(/[0-9]/, 'Must have at least one digit')\r\n    .matches(/[A-Z]/, 'Must have at least one uppercase character')\r\n    .matches(/^[a-zA-Z0-9]{8,}$/, 'Must have only letters and digits')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst SignUpForm = () => {\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{ username: '', email: '', password: '' }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n        dispatch(registrAction(values));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n        <Form onSubmit={handleSubmit} style={{ marginTop: '70px', width: '300px' }}>\r\n          <Form.Item\r\n            validateStatus={touched.username && errors.username ? 'error' : null}\r\n            help={touched.username && errors.username ? errors.username : null}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              prefix={<Icon type=\"user\" />}\r\n              placeholder=\"Enter a username\"\r\n              value={values.username}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.email && errors.email ? 'error' : null}\r\n            help={touched.email && errors.email ? errors.email : null}\r\n          >\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" />}\r\n              placeholder=\"Enter an email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={touched.password && errors.password ? 'error' : null}\r\n            help={touched.password && errors.password ? errors.password : null}\r\n          >\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" />}\r\n              placeholder=\"Enter a password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ width: '100%' }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Form.Item>\r\n          {!isEmpty(errorsApi) && (\r\n            <Alert type=\"error\" message={JSON.stringify(errorsApi, null, 2)} />\r\n          )}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport SignUpForm from '../components/SignUpForm';\r\n\r\nconst SignUp = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <SignUpForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport history from '../history';\r\n\r\nconst HistoryBackButton = () => {\r\n  const returnBack = () => history.go(-1);\r\n  return (\r\n    <Button style={{ marginBottom: '30px' }} type=\"primary\" onClick={returnBack}>\r\n      Назад\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default HistoryBackButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport Like from './Like';\r\nimport history from '../history';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleActions = ({ article, user }) => {\r\n  const { author = {}, slug } = article;\r\n  const dispatch = useDispatch();\r\n  const handleDeleteClick = () => {\r\n    dispatch(actions.deleteArticleAction(slug));\r\n    history.push(`/`);\r\n  };\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <span style={{ marginRight: '20px' }}>\r\n        <Like article={article} />\r\n      </span>\r\n      {user.username === author.username && (\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            shape=\"circle\"\r\n            icon=\"edit\"\r\n            onClick={() => {\r\n              history.push(`/articles/${slug}/edit`);\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"danger\"\r\n            size=\"large\"\r\n            shape=\"circle\"\r\n            icon=\"close\"\r\n            onClick={handleDeleteClick}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nArticleActions.propTypes = {\r\n  article: PropTypes.instanceOf(Object),\r\n  user: PropTypes.instanceOf(Object),\r\n};\r\n\r\nArticleActions.defaultProps = {\r\n  article: {},\r\n  user: {},\r\n};\r\n\r\nexport default ArticleActions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport { useSelector } from 'react-redux';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport { Card, Tag } from 'antd';\r\nimport HistoryBackButton from '../components/HistoryBackButton';\r\nimport ArticleActions from '../components/ArticleActions';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Article = ({ match }) => {\r\n  const { slug } = match.params;\r\n  const { user, article = {} } = useSelector(state => ({\r\n    article: state.articles.articles.find(item => item.slug === slug) || {},\r\n    user: state.user.userData,\r\n  }));\r\n  const { author = {} } = article;\r\n  const formattedDate = formatDistance(new Date(article.createdAt || 0), new Date(), {\r\n    locale: ruLocale,\r\n  });\r\n\r\n  const tags = article.tagList && article.tagList.map(tag => <Tag key={tag}>{tag}</Tag>);\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <HistoryBackButton />\r\n      <Card\r\n        hoverable\r\n        title={article.title}\r\n        extra={<ArticleActions article={article} user={user} />}\r\n      >\r\n        <p style={{ minHeight: '200px' }}>{article.body}</p>\r\n        <Meta description={`Создана ${formattedDate} назад. Автор - ${author.username}`} />\r\n        {tags && tags.length > 0 && <p>Тэги: {tags}</p>}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { isEmpty } from 'lodash';\r\nimport { Form, Input, Icon, Button, Alert, Tag } from 'antd';\r\nimport HistoryBackButton from '../components/HistoryBackButton';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleEdit = ({ match }) => {\r\n  const { slug } = match.params;\r\n  const { article, errors: errorsApi } = useSelector(state => ({\r\n    errors: state.errors,\r\n    article: state.articles.articles.find(item => item.slug === slug),\r\n  }));\r\n  const storageArticle = JSON.parse(localStorage.getItem('openedArticle'));\r\n  const { title, body, description, tagList } = isEmpty(article) ? storageArticle : article;\r\n  const dispatch = useDispatch();\r\n  const inputTagRef = React.createRef();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    body: Yup.string().required('Body is required'),\r\n    tagList: Yup.array()\r\n      .of(Yup.string().required('Enter a tagname'))\r\n      .min(1, 'Must be minimum one tag'),\r\n  });\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '70px',\r\n  };\r\n  return (\r\n    <div className=\"wrapper\" style={styles}>\r\n      <div className=\"content\" style={{ width: '500px' }}>\r\n        <div style={{ display: 'flex', width: '100%' }}>\r\n          <HistoryBackButton /> <h1 style={{ marginLeft: 'auto' }}> Редактирование статьи</h1>\r\n        </div>\r\n        <Formik\r\n          initialValues={{ title, description, body, tagList }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            setSubmitting(true);\r\n            dispatch(actions.editArticleAction(slug, values));\r\n            setSubmitting(false);\r\n            resetForm();\r\n          }}\r\n        >\r\n          {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Item\r\n                validateStatus={touched.title && errors.title ? 'error' : null}\r\n                help={touched.title && errors.title ? errors.title : null}\r\n              >\r\n                <Input\r\n                  type=\"title\"\r\n                  id=\"title\"\r\n                  prefix={<Icon type=\"mail\" />}\r\n                  placeholder=\"Enter a title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                validateStatus={touched.description && errors.description ? 'error' : null}\r\n                help={touched.description && errors.description ? errors.description : null}\r\n              >\r\n                <Input\r\n                  type=\"description\"\r\n                  id=\"description\"\r\n                  prefix={<Icon type=\"lock\" />}\r\n                  placeholder=\"Enter a description\"\r\n                  value={values.description}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                validateStatus={touched.body && errors.body ? 'error' : null}\r\n                help={touched.body && errors.body ? errors.body : null}\r\n              >\r\n                <Input.TextArea\r\n                  autoSize={{ minRows: 8, maxRows: 8 }}\r\n                  type=\"body\"\r\n                  id=\"body\"\r\n                  placeholder=\"Enter a body\"\r\n                  value={values.body}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                validateStatus={touched.tagList && errors.tagList ? 'error' : null}\r\n                help={touched.tagList && errors.tagList ? errors.tagList : null}\r\n              >\r\n                <FieldArray\r\n                  name=\"tagList\"\r\n                  render={({ remove, push }) => {\r\n                    const tags =\r\n                      values.tagList &&\r\n                      values.tagList.map((tag, index) => (\r\n                        <Tag\r\n                          key={tag}\r\n                          closable\r\n                          name={`tagList[${index}]`}\r\n                          onClose={() => remove(index)}\r\n                        >\r\n                          {tag}\r\n                        </Tag>\r\n                      ));\r\n                    return (\r\n                      <div>\r\n                        {tags}\r\n                        <Input ref={inputTagRef} />\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={() => push(inputTagRef.current.state.value)}\r\n                        >\r\n                          Add tag\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  style={{ width: '100%' }}\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Save changes\r\n                </Button>\r\n              </Form.Item>\r\n\r\n              {!isEmpty(errorsApi) && (\r\n                <Alert type=\"error\" message={JSON.stringify(errorsApi, null, 2)} />\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticleEdit.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default ArticleEdit;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { isEmpty } from 'lodash';\r\nimport { Form, Input, Icon, Button, Alert, Tag } from 'antd';\r\nimport HistoryBackButton from '../components/HistoryBackButton';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleAdd = () => {\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const inputTagRef = React.createRef();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    body: Yup.string().required('Body is required'),\r\n    tagList: Yup.array()\r\n      .of(Yup.string().required('Enter a tagname'))\r\n      .min(1, 'Must be minimum one tag'),\r\n  });\r\n  const styles = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: '70px',\r\n  };\r\n  return (\r\n    <div className=\"wrapper\" style={styles}>\r\n      <div className=\"content\" style={{ width: '500px' }}>\r\n        <div style={{ display: 'flex', width: '100%' }}>\r\n          <HistoryBackButton /> <h1 style={{ marginLeft: 'auto' }}> Добавление статьи</h1>\r\n        </div>\r\n        <Formik\r\n          initialValues={{ title: '', description: '', body: '', tagList: [] }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            setSubmitting(true);\r\n            dispatch(actions.addArticleAction(values));\r\n            setSubmitting(false);\r\n            resetForm();\r\n          }}\r\n        >\r\n          {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Item\r\n                validateStatus={touched.title && errors.title ? 'error' : null}\r\n                help={touched.title && errors.title ? errors.title : null}\r\n              >\r\n                <Input\r\n                  type=\"title\"\r\n                  id=\"title\"\r\n                  prefix={<Icon type=\"mail\" />}\r\n                  placeholder=\"Enter a title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                validateStatus={touched.description && errors.description ? 'error' : null}\r\n                help={touched.description && errors.description ? errors.description : null}\r\n              >\r\n                <Input\r\n                  type=\"description\"\r\n                  id=\"description\"\r\n                  prefix={<Icon type=\"lock\" />}\r\n                  placeholder=\"Enter a description\"\r\n                  value={values.description}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                validateStatus={touched.body && errors.body ? 'error' : null}\r\n                help={touched.body && errors.body ? errors.body : null}\r\n              >\r\n                <Input.TextArea\r\n                  autoSize={{ minRows: 8, maxRows: 8 }}\r\n                  type=\"body\"\r\n                  id=\"body\"\r\n                  placeholder=\"Enter a body\"\r\n                  value={values.body}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                validateStatus={touched.tagList && errors.tagList ? 'error' : null}\r\n                help={touched.tagList && errors.tagList ? errors.tagList : null}\r\n              >\r\n                <FieldArray\r\n                  name=\"tagList\"\r\n                  render={({ remove, push }) => {\r\n                    const tags = values.tagList.map((tag, index) => (\r\n                      <Tag\r\n                        key={tag}\r\n                        closable\r\n                        name={`tagList[${index}]`}\r\n                        onClose={() => remove(index)}\r\n                      >\r\n                        {tag}\r\n                      </Tag>\r\n                    ));\r\n                    return (\r\n                      <div>\r\n                        {tags}\r\n                        <Input ref={inputTagRef} />\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={() => push(inputTagRef.current.state.value)}\r\n                        >\r\n                          Add tag\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  style={{ width: '100%' }}\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Save changes\r\n                </Button>\r\n              </Form.Item>\r\n\r\n              {!isEmpty(errorsApi) && (\r\n                <Alert type=\"error\" message={JSON.stringify(errorsApi, null, 2)} />\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleAdd;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport Navbar from '../components/Navbar';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport Article from './Article';\r\nimport ArticleEdit from './ArticleEdit';\r\nimport ArticleAdd from './ArticleAdd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst ConditionalRoute = ({ component: Comp, pathToRedirect, conditionFunc, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (conditionFunc() ? <Comp {...props} /> : <Redirect to={pathToRedirect} />)}\r\n    />\r\n  );\r\n};\r\n\r\nConditionalRoute.propTypes = {\r\n  component: PropTypes.instanceOf(Object).isRequired,\r\n  pathToRedirect: PropTypes.string.isRequired,\r\n  conditionFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Routes = () => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  return (\r\n    <Layout className=\"layout\" style={{ maxWidth: '1440px' }}>\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Navbar />\r\n      </Header>\r\n      <Content>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/home\" />\r\n          </Route>\r\n          <ConditionalRoute\r\n            path=\"/home\"\r\n            component={Home}\r\n            pathToRedirect=\"/login\"\r\n            conditionFunc={() => loggedIn}\r\n          />\r\n          <ConditionalRoute\r\n            path=\"/add\"\r\n            component={ArticleAdd}\r\n            pathToRedirect=\"/login\"\r\n            conditionFunc={() => loggedIn}\r\n          />\r\n          <ConditionalRoute\r\n            path=\"/articles/:slug/edit\"\r\n            component={ArticleEdit}\r\n            pathToRedirect=\"/login\"\r\n            conditionFunc={() => loggedIn}\r\n          />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/articles/:slug\" component={Article} />\r\n        </Switch>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Routes from './routes';\nimport history from './history';\n\nfunction App() {\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <Router history={history}>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}